package com.sanbeaman.shell.scenetypes{	import com.greensock.TimelineLite;	import com.greensock.TimelineMax;	import com.greensock.TweenLite;	import com.greensock.TweenMax;	import com.greensock.easing.Back;	import com.greensock.easing.Bounce;	import com.greensock.easing.EaseLookup;	import com.greensock.easing.Quint;	import com.sanbeaman.shell.controllers.SlidePlayer;	import com.sanbeaman.shell.data.SceneObject;	import com.sanbeaman.shell.data.SlideObject;	import com.sanbeaman.shell.data.TextBoxObject;	import com.sanbeaman.shell.data.UIparams;	import com.sanbeaman.shell.events.PageEvent;	import com.sanbeaman.shell.events.ShellEvent;	import com.sanbeaman.shell.events.WidgetEvent;	import com.sanbeaman.shell.media.BackMusic;	import com.sanbeaman.shell.media.MediaSync;	import com.sanbeaman.shell.utils.CustomEaseHelper;	import com.sanbeaman.shell.utils.MathUtils;	import com.sanbeaman.shell.utils.SimpleUtils;	import com.sanbeaman.shell.widget.ACT_click2reveal;	import com.sanbeaman.shell.widget.ACT_dragDrop;	import com.sanbeaman.shell.widget.ACT_dragRate;	import com.sanbeaman.shell.widget.ACT_match;	import com.sanbeaman.shell.widget.ACT_multipleChoice;	import com.sanbeaman.shell.widget.ACT_textAreaInput;	import com.sanbeaman.shell.widget.BodyAnim;	import com.sanbeaman.shell.widget.BodyAnimSWF;	import com.sanbeaman.shell.widget.BodyBullet;	import com.sanbeaman.shell.widget.BodyBulletCol;	import com.sanbeaman.shell.widget.BodyButton;	import com.sanbeaman.shell.widget.BodyCopy;	import com.sanbeaman.shell.widget.BodyHeader;	import com.sanbeaman.shell.widget.BodyHeader1;	import com.sanbeaman.shell.widget.BodyImage;	import com.sanbeaman.shell.widget.BodyImageAdd;	import com.sanbeaman.shell.widget.BodyImageCascade;	import com.sanbeaman.shell.widget.BodyImageGlow;	import com.sanbeaman.shell.widget.BodyImageReplace;	import com.sanbeaman.shell.widget.BodyImage_CoverFlow;	import com.sanbeaman.shell.widget.BodyNote;	import com.sanbeaman.shell.widget.BodyPages;	import com.sanbeaman.shell.widget.BodySndFX;	import com.sanbeaman.shell.widget.BodyTableRow;	import com.sanbeaman.shell.widget.BodyText;	import com.sanbeaman.shell.widget.BodyTextReplace;	import com.sanbeaman.shell.widget.BodyTimeLine;	import com.sanbeaman.shell.widget.BodyUI;	import com.sanbeaman.shell.widget.C2R_HeaderItem;	import com.sanbeaman.shell.widget.C2R_Menu;	import com.sanbeaman.shell.widget.MapIcon;	import com.sanbeaman.shell.widget.NoteBox;	import com.sanbeaman.shell.widget.SceneNumberTXT;	import com.sanbeaman.shell.widget.Scene_NavBar;	import com.sanbeaman.shell.widget.StaticImage;	import com.sanbeaman.shell.widget.Timeline_CoverFlow;		import flash.display.CapsStyle;	import flash.display.DisplayObject;	import flash.display.JointStyle;	import flash.display.LineScaleMode;	import flash.display.MovieClip;	import flash.display.Shape;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.media.SoundMixer;	import flash.net.URLRequest;	import flash.net.navigateToURL;	import flash.utils.Dictionary;	import flash.utils.Timer;		import fl.transitions.Tween;
		public class SceneBase extends MovieClip	{		//TweenPlugin.activate([TransformMatrixPlugin]);		private var INNER_PADDING:Number = 20;		private var _so:SceneObject;		private var _sceneType:String;				private var _templateXML:XMLList;		private var _templateCODE:String;		private var _contentBodyXML:XMLList;				private var _sectionBlockXML:XMLList;		private var _sceneBodyXML:XMLList;		private var _noteBlockXML:XMLList;		private var _bodyImageXML:XMLList;		private var _slidesArray:Array;		private var _slidesXML:XMLList;		private var _sceneItemsXML:XMLList;				private var _currentSlideObject:SlideObject;				private var _currentSlideIndex:int;		// area that holds the _slideContent MovieClip(s)		private var _slideHolder:Sprite;		private var _slideContent:MovieClip;				private var _sceneHeaderType:String;				private var _hasMainSceneHeader:Boolean;		private var _mainSceneHeader:Sprite;				//layer for ui items that persist across multiple slides (for example sceneHeaders and possibly logos and images		private var _sceneLayer:Sprite;		//sprite to hold items that don't fit in content window, i.e. gps notes		private var _xtraHolder:Sprite;						//private var _sceneBody:SceneHolder;		private var _sceneBody:SceneBody;				private var _hasSceneAnimation:Boolean = false;		private var _sceneTL:TimelineMax;		private var _slideMediaDuration:Number;		private var _slideTotalDuration:Number;		private var _sNavBar:Scene_NavBar;		private var _gps:GPSMenu;				private var _hasScene_EndNote:Boolean;		private var _scene_EndNoteBox:NoteBox;		private var _slide_EndNoteBox:NoteBox;		private var _body_EndNoteBox:NoteBox;		private var _hasSlide_EndNote:Boolean;					private var _holder_EndNoteBox:NoteBox;		private var _holder_EndNote_slide:NoteBox;		private var _holder_EndNote_scene:NoteBox;		private var _holder_EndNote_body:NoteBox;		//private var _gpsEndNote_body:GPSNoteBox;								private var _hasBodyGPSEndNote:Boolean;				private var _slideItems:Array;		private var _sceneItems:Array;		private var _sceneMusic:BackMusic;		private var _hasSceneMusic:Boolean;				private var _shell_dir:String;						private var _slideTL:TimelineMax;				private var _slideTimelinesArray:Array;		private var _animTLs:TimelineMax;		private var _hasSlideTimelines:Boolean = false;				private var _uiAnimObjects:Dictionary;				private var _slideDuration:Number;				private var _glow_tl:TimelineMax;				private var _glowON:Boolean;		private var _glowColorCode:uint;// = SHELL_COLORS.CLR_LTBLUE;		private var _glowAlpha:Number = .8;		private var _glowX:Number = 10;		private var _glowY:Number = 10;		private var _glowStrength:Number = 3;		private var _glowQuality:uint = 3;						private var _hasFadeOutItems:Boolean;		private var _fadeOutItems:Array;						private var _slideHasUIAnimations:Boolean;				private var _sNumTXT:SceneNumberTXT;				private var _currentSceneID:String;		private var _currentSlideID:String;				/**		 * MEDIA VARS		 * 		 * **/				private var _slideMediaSync:MediaSync;						/**		 * TRACKING VARS		 * 		 * **/				//Variable used to trigger Final SCO in SABA Version		private var _isCourseComplete:Boolean;				//Has the Curent SCene Been Viewed and Tracked Before		private var _isCurrentSceneTracked:Boolean;		//Has the current SLide been viewed and Tracked before		private var _isCurrentSlideTracked:Boolean;				//Have all the 'internal Slide been viewed.		private var _allSlidesViewed:Boolean;				private var _trackedSlideIDArray:Array;				private var _slideStartDelay:int = 0;				private var _slideAnimType:String;								private var _printView:Boolean;		private var _hasPrintView:Boolean = false;		private var _printuiname:String;				public var CONTENT_WIDTH:Number;		public var CONTENT_HEIGHT:Number;				public var FONT_NAME:String;		public var FONT_DIRECTION:String = "ltr";				public var PULSE_COLOR_CODE:uint;		public var PULSE_COLOR:String;				private var _slidePlayerHolder:Sprite;				private var _slidePlayer:SlidePlayer;		private var _hasSlidePlayer:Boolean = false;		private var _showSlidePlayer:Boolean = false;				private var _hasSlideMedia:Boolean;		private var _hasActivity:Boolean;				private var _languageID:String;		private var _layoutModifier:String;				private var _widget:*;		private var _timelineParams:UIparams;				private var _sceneTextObject:TextBoxObject;				private var _c2rMenu:C2R_Menu;		private var _coverFlowImages:Array;				private var _hasSceneMenu:Boolean;				private var _isSectionComplete:Boolean;				public function SceneBase()		{			super();		}						public function buildScene(so:SceneObject,slideindex:int = 0, templateXML:XMLList = null, slideplayer:SlidePlayer = null,isSectionComplete:Boolean = false):void		{			_so = so;						_currentSceneID = _so.sID;			if(slideplayer != null){				_slidePlayer = slideplayer;				_hasSlidePlayer = true;			}						//used to disable Start Button when returning to Course after failing test or 'walking of sequence'			_isSectionComplete = isSectionComplete;			var langid:String = _so.langID;						_languageID = (langid.length  < 3)?langid:langid.slice(0,2);						_layoutModifier = (_languageID == "ar")?"flipx":"none";					_templateXML = templateXML;			_templateCODE = templateXML.@code;			_sceneBodyXML = templateXML.sceneBody;			_bodyImageXML =  templateXML.bodyImage;						_sceneTextObject = new TextBoxObject();			_sceneTextObject.init(_sceneBodyXML);			_sceneTextObject.box_langid = _languageID;			var sceneHeaderXML:XMLList = templateXML.sceneHeader;						_sceneHeaderType = (sceneHeaderXML.hasOwnProperty("@style"))?sceneHeaderXML.@style:"normal";						PULSE_COLOR = (_bodyImageXML.hasOwnProperty("@pulseColor"))?_bodyImageXML.@pulseColor:"blue";			PULSE_COLOR_CODE = SHELL_COLORS.lookUpColor(PULSE_COLOR);						CONTENT_WIDTH = _sceneBodyXML.@width;			CONTENT_HEIGHT = _sceneBodyXML.@height;			FONT_NAME = _sceneBodyXML.@fontName;			FONT_DIRECTION = (_languageID == 'ar')?"rtl":"ltr";			//trace("FONT_NAME= "+ FONT_NAME);			var contentX:Number =_sceneBodyXML.@x;// 12;			var contentY:Number = _sceneBodyXML.@y;//70;						_noteBlockXML = templateXML.noteBlock;						var stype:String = _so.sType;			_sceneType = stype.toLowerCase();			_shell_dir = _so.shellDir;			_sceneLayer = new Sprite();						_mainSceneHeader = new Sprite();			_slideHolder = new Sprite();			_xtraHolder = new Sprite();						_allSlidesViewed = false;			_hasScene_EndNote = false;						if(TRACK_VARS.inDemoMode){			//	_buildSNUMtxt();			}			_hasMainSceneHeader = false;			_isCourseComplete = false;									_sceneBody = new SceneBody();						_sceneBody.init(_templateXML);						//_sceneBody.init('ASCE',CONTENT_WIDTH,CONTENT_HEIGHT,contentX,contentY);					_sceneBody.x =0;// _sceneBodyXML.@x;// 12;			_sceneBody.y =0; //_sceneBodyXML.@y;//70;				//	var loadSlideIndex:int = slideindex;			/*			_gps = new GPSMenu();			_gps.x = SHELL_VARS.GPS_CHROME_X; //5			_gps.y = SHELL_VARS.GPS_CHROME_Y;//55;			*/			this.addChild(_sceneBody);			_sceneBody.contentWindow.addChild(_sceneLayer);			_sceneBody.contentWindow.addChild(_slideHolder);			_sceneBody.noteWindow.addChild(_xtraHolder);						var loadSlideIndex:int= slideindex;						_slidesArray = new Array();			_slidesArray = _so.slideList;						_isCurrentSceneTracked = _so.isTracked;			_trackedSlideIDArray = new Array();			if(_isCurrentSceneTracked){				for (var i:int = 0 ; i<_slidesArray.length;i++){					var sldo:SlideObject = _slidesArray[i];					_trackedSlideIDArray.push(sldo.slideID);									}							}			this.addEventListener(ShellEvent.SLIDE_EVENT,_slideEventListener);									_hasMainSceneHeader = _build_SceneItems(_so.sceneItems.*,_sceneHeaderType);						_sceneBody.headerArea.addChild(_mainSceneHeader);							if (!_hasSceneMenu){				_addSlide(loadSlideIndex);			} else {				if (_sceneType == 'navbarmenu'){					_addSlide(loadSlideIndex);				}							}					}				private function _buildSNUMtxt():void		{			_sNumTXT = new SceneNumberTXT();			_sNumTXT.init('SceneNumber');			_sNumTXT.x = 400;			_sNumTXT.y = 6;			this.addChild(_sNumTXT);		}				private function _showSlideNumber(num:String):void		{			//trace("snum= " + num);			if (TRACK_VARS.inDemoMode){				//_sNumTXT.sNumber = num;			}		}				public function loadSlideByIndex(sldIndex:int):void		{			_clearAndLoadNextSlide(sldIndex);		}		public function loadNextSlide():void		{			var nextSlideIndex:int = _currentSlideIndex + 1;			_clearAndLoadNextSlide(nextSlideIndex);		}				//_buildSceneItems		private function _build_SceneItems(siXML:XMLList, sceneHeadType:String = null):Boolean		{			_hasSceneMenu = false;			_sceneItems = new Array();			for each (var ui:XML in siXML)			{				var _hasMainHead:Boolean = false;				var ut:String = ui.@type;				var uiType:String = ut.toLowerCase();				switch (uiType){					case 'scenenavbar':						_hasSceneMenu = true;						_sNavBar = new Scene_NavBar();						_sNavBar.build(ui,_shell_dir,CONTENT_WIDTH);						_sNavBar.x = 0;						_sNavBar.y = (CONTENT_HEIGHT - _sNavBar.height) + 10;												_sNavBar.addEventListener(ShellEvent.SLIDE_EVENT,_slideEventListener);						_sceneBody.contentWindow.addChild(_sNavBar);						break;					case 'timelinecoverflow':						_hasSceneMenu = true;						_createCoverFlow_timeline(ui);						break;					case 'timelineslidedata':						_createCoverFlow_params(ui);						break;					case 'c2rmenu':						_hasSceneMenu = true;						_createClick2RevealMenu(ui);						break;					case 'music':						_createSceneMusic(ui);						break;					case 'sceneendnote':						_create_SceneEndNote(ui);						break;					case 'sceneheader':						if (sceneHeadType == 'breadcrumb'){							var sceneHead:String = ui.header.toString();							var se:ShellEvent = new ShellEvent(ShellEvent.SCENE_EVENT,"switchSceneHeader",sceneHead,true,true);							this.dispatchEvent(se);							_hasMainHead = false;						} else {							_createMainSceneHeader(ui);							_hasMainHead = true;						}						break;					case 'sceneicon':						_createSceneIcon(ui,true);						//var bdyui:BodyUI = _createSceneBodyImage0(ui,true)						//_sceneLayer.addChild(bdyui);						//_hasMainHead = true;						break;					case 'scenegraphics':						_createSceneGraphics(ui);						break;					case 'bodyicon':						//_createSceneImg(ui);						var bdyui:BodyUI = _createSceneBodyImage0(ui,true)						_sceneLayer.addChild(bdyui);						//_hasMainHead = true;						break;					case 'bodyanim':						//used in PAPS (mod4000)						_createBodyAnim(ui, true);						break;					default:						trace('no sceneitems');				}			}			if (_sceneItems.length > 0){			//	trace('_sceneItems.length==='+ _sceneItems.length);				_hasSceneAnimation = true;				_sceneTL = _timeline_scene();							}			return _hasMainHead;		}				//_build_sceneTimeLine		private function _timeline_scene():TimelineMax		{			var tlmax:TimelineMax = new TimelineMax();			var bdyui:BodyUI;			var otrans:String;// = 			var tt:Number;						for (var i:int = 0; i<_sceneItems.length; i++){				bdyui = _sceneItems[i] as BodyUI;				otrans = String(bdyui.trans).toLowerCase();				switch(otrans) {					case 'animbuild':						var bdyswf:BodyAnimSWF = bdyui as BodyAnimSWF;												var tmax:TimelineMax = bdyswf.animTL;						//trace('animbuild  bdyswf.animTL total time='+ tmax.totalDuration());						tlmax.add(tmax);						break;									case 'slidedown':						tt = bdyui.time;												if (String(bdyui.ease).toLowerCase() == 'backeaseout'){							tlmax.add(TweenLite.from(bdyui,tt,{y:"-100",alpha:0,ease:Back.easeOut,easeParams:[1]}));						} else {							tlmax.add(TweenLite.from(bdyui,tt,{y:"-100",alpha:0,ease:CustomEaseHelper.find(bdyui.ease)}));						}						break;					case 'fadeup':						tt = bdyui.time;												if (String(bdyui.ease).toLowerCase() == 'backeaseout'){							tlmax.add(TweenLite.from(bdyui,tt,{y:"+100",alpha:0,ease:Back.easeOut,easeParams:[1]}));						} else {							tlmax.add(TweenLite.from(bdyui,tt,{y:"+100",alpha:0,ease:CustomEaseHelper.find(bdyui.ease)}));						}						break;							}							}						return tlmax;		}						/**		 * CREATE the elements for the SCENE LAYER		 */				private function _createSceneGraphics(uinode:XML):void		{			var itemXML:XMLList = uinode.*;			for each (var item:XML in itemXML) 			{ 				var wiID:String = item.@id;				var itype:String = item.@type;				var fullpath:String;				switch (itype){					case 'back':						var back:StaticImage = new StaticImage();						var ieff:String = (item.hasOwnProperty("@effect"))?item.@effect:"none";						var ipath:String= item.@url;						fullpath = _shell_dir + SHELL_VARS.FOLDER_MEDIA + ipath;						back.init(fullpath,false,ieff);						back.x = item.@x;						back.y = item.@y;						_sceneLayer.addChildAt(back,0);						break;					/*					case 'logo':						var itrans:String = (item.hasOwnProperty("@trans")) ? item.@trans :"fadeOn";						var iease:String = (item.hasOwnProperty("@ease")) ? item.@ease : SHELL_VARS.DEFAULT_EASE;						var ieffect:String = (item.hasOwnProperty("@effect")) ? item.@effect :"shadow";						var itempath:String = item.@sfile;						fullpath = _shell_dir + SHELL_VARS.FOLDER_GRAPHICS + itempath;						var icenter:Boolean = (item.hasOwnProperty("@centerIt")) ? true :false;						var iscalemode:String = (item.hasOwnProperty("@scaleMode")) ? item.@scaleMode :"none";						var iscalefactor:Number = (item.hasOwnProperty("@scaleFactor")) ? item.@scaleFactor :1;						var img:ASBodyLogo = new ASBodyLogo();						var iw:Number = item.@width;						var ih:Number = item.@height;						var ix:Number = item.@x;						var iy:Number = item.@y;						img.init(fullpath,iscalemode,iscalefactor,iw,ih,ieffect,icenter);						img.x = item.@x;						img.y = item.@y;						_sceneHolder.addChild(img);						break;					*/					default:						trace('error scenegraphic');				}			}		}		//_createCoverFlowParams		private function _createCoverFlow_params(uinode:XML):void		{			_timelineParams = new UIparams();			_timelineParams.uiWidth  =  (uinode.hasOwnProperty("@width")) ? uinode.@width : 700;			_timelineParams.uiHeight =  (uinode.hasOwnProperty("@height")) ? uinode.@height : 0;			_timelineParams.uiX =  (uinode.hasOwnProperty("@x")) ? uinode.@x :0; 			_timelineParams.uiY = (uinode.hasOwnProperty("@y")) ? uinode.@y : 0;					_timelineParams.uiXloc =  (uinode.hasOwnProperty("@x")) ? uinode.@x :"0"; 			_timelineParams.uiYloc = (uinode.hasOwnProperty("@y")) ? uinode.@y : "0";			_timelineParams.uiMargin = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : 0;						_timelineParams.uiFontSize = (uinode.hasOwnProperty("@fontSize")) ? uinode.@fontSize : _sceneTextObject.box_fontSize;// SHELL_VARS.DEFAULT_FONTSIZE;			_timelineParams.uiFontColor = (uinode.hasOwnProperty("@fontColor")) ? uinode.@fontColor :_sceneTextObject.box_fontColor;//  SHELL_VARS.DEFAULT_FONTCOLOR;			_timelineParams.uiFontStyle = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle :_sceneTextObject.box_fontStyle;// SHELL_VARS.DEFAULT_FONTSTYLE;			//var ufontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : "center";//SHELL_VARS.DEFAULT_FONTALIGN;						//	var ufontsize:Number= (uinode.hasOwnProperty("@fontSize"))?uinode.@fontSize:16;			//	var ufontcolor:String= (uinode.hasOwnProperty("@fontColor"))?uinode.@fontColor:"default";			var uformattype:String = (uinode.hasOwnProperty("@formatType"))?uinode.@formatType:"normal";			_timelineParams.uiPadX = (uinode.hasOwnProperty("@xPad")) ? uinode.@xPad : 0;			_timelineParams.uiPadY = (uinode.hasOwnProperty("@yPad")) ? uinode.@yPad : 0;			_timelineParams.uiPadding = (uinode.hasOwnProperty("@padding")) ? uinode.@padding : SHELL_VARS.DEFAULT_PADDING;			_timelineParams.uiTrans  = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			_timelineParams.uiEase = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			_timelineParams.uiEffect= (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;			_timelineParams.uiTime = (uinode.hasOwnProperty("@time")) ? uinode.@time : SHELL_VARS.DEFAULT_TIME;					//_timelineParams.uiFontSize = (uinode.hasOwnProperty("@fontSize")) ? uinode.@fontSize : SHELL_VARS.DEFAULT_FONTSIZE;		//	_timelineParams.uiFontColor = (uinode.hasOwnProperty("@fontColor")) ? uinode.@fontColor : SHELL_VARS.DEFAULT_FONTCOLOR;		//	_timelineParams.uiFontStyle = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle : SHELL_VARS.DEFAULT_FONTSTYLE;			_timelineParams.uiFontHAlign = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : SHELL_VARS.DEFAULT_FONTALIGN;						_timelineParams.uiFormatType = (uinode.hasOwnProperty("@formatType")) ? uinode.@formatType : "normal";		}				//_createTimelineCoverFlow		private function _createCoverFlow_timeline(uinode:XML):void		{			var fullmediapath:String= _shell_dir + SHELL_VARS.FOLDER_MEDIA					var tl:Timeline_CoverFlow = new Timeline_CoverFlow();			tl.init(uinode,fullmediapath,CONTENT_WIDTH, CONTENT_HEIGHT);						tl.x = (uinode.hasOwnProperty("@widgetx"))? uinode.@widgetx: 0;			tl.y = (uinode.hasOwnProperty("@widgety"))?uinode.@widgety: 250;			tl.addEventListener(WidgetEvent.TIMELINE_EVENT,_timelineNav_listener);						_sceneLayer.addChild(tl);					}				private function _timelineNav_listener(tle:WidgetEvent):void		{			var currentSlideIndex:int = tle.eventIndex;					//	trace("_timelineNav_listener---   "+ tle.eventAction);			switch (tle.eventAction) {				case 'showSlideIndex':					_addSlide(currentSlideIndex);					break;				case 'clearSlideIndex':					_clearCoverFlowSlide(currentSlideIndex);					break;				case 'timelineComplete':					_widgetDone();					break;							}					}		private function _widgetDone():void		{		//	trace('_widgetDone' + _currentSceneID);			_isCurrentSceneTracked = true;			var scenEv:ShellEvent = new ShellEvent(ShellEvent.SCENE_EVENT, "widgetDone", _currentSceneID);			this.dispatchEvent(scenEv);					}		private function _clearCoverFlowSlide(curslideindex:int):void		{			//this.killCurrentSlideTL();			this.KillSlideController();			//SoundMixer.stopAll();			TweenLite.to(_slideContent,0.2,{autoAlpha:0,onComplete:_removeCFlowSlide,onCompleteParams:[curslideindex,_slideContent]});		}				private function _removeCFlowSlide(param1:String,param2:MovieClip):void		{			_slideHolder.removeChild(param2);			//trace('coverflowSlide_ ' + param1 + '_ removed');					}		private function _createClick2RevealMenu(uinode:XML):void		{			_c2rMenu = new C2R_Menu();			_c2rMenu.name = "c2rmenu";			var userchoice:Boolean = (uinode.hasOwnProperty("@linear"))? false : true;			_c2rMenu.addEventListener(WidgetEvent.C2R_EVENT,_c2r_listener);		//	_c2rMenu.init(uinode,_shell_dir,			var mediaPath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA;// + ipath;			_c2rMenu.init(uinode,mediaPath,userchoice,_isCurrentSceneTracked,FONT_NAME,_languageID);						_c2rMenu.x = (uinode.hasOwnProperty("@x"))? uinode.@x: 0;			_c2rMenu.y = (uinode.hasOwnProperty("@y"))?uinode.@y: 250;			_c2rMenu.time = (uinode.hasOwnProperty("@time"))? uinode.@time: 1;			_c2rMenu.trans = (uinode.hasOwnProperty("@trans"))? uinode.@trans:"none";			_c2rMenu.ease = (uinode.hasOwnProperty("@ease"))? uinode.@ease: "none";			_sceneItems.push(_c2rMenu);			_sceneLayer.addChild(_c2rMenu);			//_addSlide(0);					}		private function _c2r_listener(we:WidgetEvent):void		{			//trace('we.eventAction='+we.eventAction);			if (we.eventAction == 'loadIntro'){								//	_currentSlideID = _slidesArray[0].				_addSlide(0);			} else {								var currentbtnid:String = we.eventInfo;				var currentbtnindex:int = we.eventIndex;				_clearAndLoadInternalSlide(currentbtnid);			}						//_addSlide(we.eventIndex);					}					private function _createSceneMusic(uinode:XML):void		{									var fullpath:String = _shell_dir+ SHELL_VARS.FOLDER_MEDIA + uinode.@url;			var mduration:Number = uinode.@duration;			var msize:Number = uinode.@size;			var mloops:int = uinode.@loops;						_sceneMusic = new BackMusic();			_sceneMusic.init(fullpath,mduration,msize,mloops);			_hasSceneMusic = true;					}		// vvvvvvv		private function _createSceneIcon(uinode:XML, forScene:Boolean = false):void		{						//	var animtype:String = anmtype;			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : 20;						var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : 1;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			var uStyle:String = (uinode.hasOwnProperty("@style")) ? uinode.@style : "none";			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;						var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode : "width";//SHELL_VARS.DEFAULT_SCALEMODE;			var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor : SHELL_VARS.DEFAULT_SCALEFACTOR;						var uSyncType:String = (uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"add";						var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;			var itemXML:XMLList = uinode.*;			for each (var item:XML in itemXML) 			{ 								var iorder:int = item.@order;				var itime:Number =  (item.hasOwnProperty("@time")) ? item.@time : uTime;								var iw:Number = (item.hasOwnProperty("@width")) ? item.@width : uW;				var ih:Number = (item.hasOwnProperty("@height")) ? item.@height : uH;																var tIN:Number = (item.hasOwnProperty("@timeIn")) ? item.@timeIn : 0;				var tOUT:Number = (item.hasOwnProperty("@timeOut")) ? item.@timeOut : 999;								var itrans:String = (item.hasOwnProperty("@trans")) ? item.@trans :uTrans;				var iease:String = (item.hasOwnProperty("@ease")) ? item.@ease : uEase;				var istyle:String = (item.hasOwnProperty("@style")) ? item.@style :uStyle;				var ieffect:String = (item.hasOwnProperty("@effect")) ? item.@effect :uEffect;												var itempath:String = item.@url;				var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + itempath;												var img:BodyImage = new BodyImage();				img.init(fullpath,uScaleMode,uScaleFactor,iw,ih);								img.id = item.@id;				img.name = item.@id;								img.trans = itrans;				img.ease = iease;								img.order = iorder;				img.timeIn = tIN;				img.timeOut = tOUT;				img.time = itime;								var syncType:String =(item.hasOwnProperty("@syncType")) ? item.@syncType : uSyncType;								var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :uxpad;				var ypad:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad :uypad;				var newX:Number;				var newY:Number;								if (syncType == 'buildy'){					newX = xHolder;					newY = yHolder + ypad ;					yHolder = newY + ih;// + ypad;				} else if (syncType == 'buildx'){					newX = xHolder  + xpad;					newY = yHolder;					xHolder = newX + iw;// + xpad;				} else if (syncType == 'replace'){					newX = xHolder;					newY = yHolder;				} else {					var ix:String = (item.hasOwnProperty("@x")) ? item.@x : groupX;					var iy:String = (item.hasOwnProperty("@y")) ? item.@y : groupY;					newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,iw,margin);					newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,ih,margin);				}				img.x = newX;				img.y = newY;								var bui:BodyUI;			//if icon then it may have transparent background or diff style				bui = img as BodyUI;								if (forScene){					_sceneLayer.addChild(bui);					_sceneItems.push(bui);				} else {					_slideContent.addChildAt(bui,0);					_slideItems.push(bui)				}					}		}		private function _createMainSceneHeader(uinode:XML):void		{			var _sceneHeaderXML:XMLList = _templateXML.sceneHeader;			var uH:Number = _sceneHeaderXML.@height;			var uW:Number =_sceneHeaderXML.@width;			//var uX:Number = _sceneHeaderXML.@x;			///	var uY:Number = _sceneHeaderXML.@y;					//	var iPadding:Number = 0;//uinode.@padding;						var fontname:String= _sceneHeaderXML.@fontName;			var ufontsize:Number= _sceneHeaderXML.@fontSize;			var fontcolor:String= _sceneHeaderXML.@fontColor;			var uxpad:Number=_sceneHeaderXML.@xPad;			var uypad:Number= _sceneHeaderXML.@yPad;//:12;									var fillcolor:String= _sceneHeaderXML.@fillColor;			var fillalpha:Number= _sceneHeaderXML.@fillAlpha;						var iTrans:String = (uinode.hasOwnProperty("@trans"))?uinode.@trans:SHELL_VARS.DEFAULT_TRANS;			var iEase:String = (uinode.hasOwnProperty("@ease"))?uinode.@ease: SHELL_VARS.DEFAULT_EASE;						var itemXML:XMLList = uinode.*;						for each (var item:XML in itemXML) 			{ 				var txtwidth:Number= (item.hasOwnProperty("@width"))?item.@width:uW;				var txtheight:Number= (item.hasOwnProperty("@height"))?item.@height:uH;				var xpad:Number= (item.hasOwnProperty("@xPad"))?item.@xPad:uxpad;				var ypad:Number= (item.hasOwnProperty("@yPad"))?item.@yPad:uypad;				var iX:Number = (item.hasOwnProperty("@x"))?item.@x:0;				var iY:Number = (item.hasOwnProperty("@y"))?item.@y:0;				var fontsize:Number= (item.hasOwnProperty("@fontSize"))?item.@fontSize:ufontsize;				var sHeader:BodyHeader = new BodyHeader();				var headtext:String = item;				var ordernum:int = int(item.@order);				//	sHeader.addHeader(headtext,false,0xffffff,iW);				//trace('_createMainSceneHeader _createMainSceneHeader_createMainSceneHeader_createMainSceneHeader_createMainSceneHeader_createMainSceneHeader_createMainSceneHeader_createMainSceneHeader_createMainSceneHeader');				sHeader.addHeader(headtext,fontname,fontsize,fontcolor,xpad,ypad,fillcolor,fillalpha,txtwidth,txtheight,_languageID);				//	sHeader.addHeader(headtext,false,SHELL_COLORS.CLR_WHITE,iW,iH);				sHeader.id = item.@id;				sHeader.name = item.@id;				sHeader.order = ordernum;				sHeader.time =  item.@time;				sHeader.timeIn =  item.@timeIn;				sHeader.timeOut =  item.@timeOut;								sHeader.trans = iTrans;				sHeader.ease = iEase;												sHeader.x = iX;// sceneHeader.@x;				sHeader.y = iY; //sceneHeader.@y;								_mainSceneHeader.addChild(sHeader);				//	_slideItems.push({ordernum, sHeader});			}								}						private function _createSectionHeader(uinode:XML):void		{						var newSectionHeader:String = uinode;//.header;			//trace('newSceneHeader=' +newSceneHeader);			var se:ShellEvent = new ShellEvent(ShellEvent.SCENE_EVENT, "switchSectionHeader", newSectionHeader);			this.dispatchEvent(se);								}		private function _createSceneBodyImage0(uinode:XML,isIcon:Boolean = false):BodyUI		{			var bdyui:BodyUI = new BodyUI();						//	var animtype:String = anmtype;			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : 20;						var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : 1;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			var uStyle:String = (uinode.hasOwnProperty("@style")) ? uinode.@style : "none";			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;						var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode : "width";//SHELL_VARS.DEFAULT_SCALEMODE;			var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor : SHELL_VARS.DEFAULT_SCALEFACTOR;						var uSyncType:String = (uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"add";						var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;			var itemXML:XMLList = uinode.*;			for each (var item:XML in itemXML) 			{ 								var iorder:int = item.@order;				var itime:Number =  (item.hasOwnProperty("@time")) ? item.@time : uTime;								var iw:Number = (item.hasOwnProperty("@width")) ? item.@width : uW;				var ih:Number = (item.hasOwnProperty("@height")) ? item.@height : uH;												var tIN:Number = (item.hasOwnProperty("@timeIn")) ? item.@timeIn : 0;				var tOUT:Number = (item.hasOwnProperty("@timeOut")) ? item.@timeOut : 999;								var itrans:String = (item.hasOwnProperty("@trans")) ? item.@trans :uTrans;				var iease:String = (item.hasOwnProperty("@ease")) ? item.@ease : uEase;				var istyle:String = (item.hasOwnProperty("@style")) ? item.@style :uStyle;				var ieffect:String = (item.hasOwnProperty("@effect")) ? item.@effect :uEffect;				var itempath:String = item.@url;				var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + itempath;												var img:BodyImage = new BodyImage();				img.init(fullpath,uScaleMode,uScaleFactor,iw,ih);				img.id = item.@id;				img.name = item.@id;								img.trans = itrans;				img.ease = iease;								img.order = iorder;				img.timeIn = tIN;				img.timeOut = tOUT;				img.time = itime;								var syncType:String =(item.hasOwnProperty("@syncType")) ? item.@syncType : uSyncType;								var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :uxpad;				var ypad:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad :uypad;				var newX:Number;				var newY:Number;								if (syncType == 'buildy'){					newX = xHolder;					newY = yHolder + ypad ;					yHolder = newY + ih;// + ypad;				} else if (syncType == 'buildx'){					newX = xHolder  + xpad;					newY = yHolder;					xHolder = newX + iw;// + xpad;				} else if (syncType == 'replace'){					newX = xHolder;					newY = yHolder;				} else {					var ix:String = (item.hasOwnProperty("@x")) ? item.@x : groupX;					var iy:String = (item.hasOwnProperty("@y")) ? item.@y : groupY;					newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,iw,margin);					newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,ih,margin);				}				img.x = newX;				img.y = newY;								var bui:BodyUI;				if (isIcon){					//if icon then it may have transparent background or diff style					bui = img as BodyUI;				} else {					bui = _addStyle(img,iw,ih);				}												if (syncType == 'overlay'){					bui.alpha = 0;					bdyui.addChild(bui);				} else {					bdyui.addChildAt(bui,0);				}								//_slideItems.push(bui);			}						return bdyui;		}								// Create the Body Note Style Box		private function _create_SceneEndNote(uinode:XML):void		{			var iTrans:String = uinode.@trans;			var iEase:String = uinode.@ease;						var fsize:Number = (uinode.hasOwnProperty("@fontSize"))? uinode.@fontSize : _noteBlockXML.@fontSize;			var fcolor:String = (uinode.hasOwnProperty("@fontColor"))? uinode.@fontColor : _noteBlockXML.@fontColor;			var blockW:Number = (uinode.hasOwnProperty("@width"))? uinode.@width : _noteBlockXML.@width;			var blockH:Number = (uinode.hasOwnProperty("@height"))? uinode.@height : _noteBlockXML.@height;					var bnXML:XMLList = uinode.*;						for each (var gnote:XML in bnXML) 			{ 				_scene_EndNoteBox = new NoteBox();				var bid:String = gnote.@id;				var btime:Number = gnote.@time;				_scene_EndNoteBox.init(gnote,fsize,fcolor,blockW,blockH,FONT_NAME,_languageID);				_scene_EndNoteBox.id = bid;				_scene_EndNoteBox.order =  int(gnote.@order);				_scene_EndNoteBox.time = btime;				_scene_EndNoteBox.name = bid;				_scene_EndNoteBox.trans = iTrans;				_scene_EndNoteBox.ease = iEase;				_holder_EndNote_scene = _scene_EndNoteBox;				//_xtraHolder.addChild(_slide_EndNoteBox);			}						_hasScene_EndNote = true;		}		// Create the Body Note Style Box				// Create the Body Note Style Box		private function _create_SlideEndNote(uinode:XML):void		{			var iTrans:String = uinode.@trans;			var iEase:String = uinode.@ease;						var fsize:Number = (uinode.hasOwnProperty("@fontSize"))? uinode.@fontSize : _noteBlockXML.@fontSize;			var fcolor:String = (uinode.hasOwnProperty("@fontColor"))? uinode.@fontColor : _noteBlockXML.@fontColor;			var blockW:Number = (uinode.hasOwnProperty("@width"))? uinode.@width : _noteBlockXML.@width;			var blockH:Number = (uinode.hasOwnProperty("@height"))? uinode.@height : _noteBlockXML.@height;						var bnXML:XMLList = uinode.*;						for each (var snote:XML in bnXML) 			{ 								_slide_EndNoteBox = new NoteBox();								var bid:String = snote.@id;				var btime:Number = snote.@time;				_slide_EndNoteBox.init(snote,fsize,fcolor,blockW,blockH,FONT_NAME,_languageID);				_slide_EndNoteBox.id = bid;				_slide_EndNoteBox.name = bid;				var ordernum:int = int(snote.@order);				_slide_EndNoteBox.order  = ordernum;				_slide_EndNoteBox.time = btime;				_slide_EndNoteBox.trans = iTrans;				_slide_EndNoteBox.ease = iEase;				//make the GPSNote appear at end ofslide				if (ordernum >= 99) {					_hasSlide_EndNote  = true;					_holder_EndNote_slide = _slide_EndNoteBox;									} else {					_hasBodyGPSEndNote = true;										_holder_EndNote_body = _slide_EndNoteBox					//} else {					//	_hasGPSendNote = false;					_xtraHolder.addChild(_holder_EndNote_body);					//_holder_EndNote_body.alpha = 0;										_slideItems.push(_slide_EndNoteBox);				//	_slideItems.push(_holder_EndNote_body);				}							}					}				private function _addSlide(sindex:int):void		{			_currentSlideIndex = sindex;			_currentSlideObject = new SlideObject();			_currentSlideObject = _slidesArray[sindex];			_currentSlideID = _currentSlideObject.slideID;			_showSlideNumber(_currentSlideID);	//trace("animtype="+_currentSlideObject.slideAnimType +"  _currentSlideslideID= "+ _currentSlideObject.slideID + "----slideNumber " + _currentSlideObject.slideNumber);			var _slideContentXML:XMLList = _currentSlideObject.slideContent;		//	trace('_slideContentXML= ' + _slideContentXML.toString());						_build_SlideItems(_slideContentXML);		}					//_buildSlideContent		private function _build_SlideItems(scXML:XMLList):void		{			_slideContent = new MovieClip();					var innerTLs:XML;			_slideItems = new Array();			_slideTimelinesArray = new Array();			_hasSlide_EndNote = false;			_hasBodyGPSEndNote = false;			_slideMediaDuration = 0;			_hasSlideMedia = false;			_slideMediaSync = new MediaSync();						_hasActivity = false;			for each (var ui:XML in scXML)			{				var ut:String = ui.@type;				var uiType:String = ut.toLowerCase();			trace("utype= " + uiType);				switch (uiType){					//MEDIA TYPE UI					case 'slidemedia':						//used on SHELL_CA						_hasSlideMedia = true;						var slideMediaXML:XML = ui;					//	_slideMediaDuration = _slideMediaSync.mediaDuration;						break;					case 'bodysndfx':						//used in PAPS						_createBodySndfx(ui);						break;					//HEADER AND TITLE UI					case 'sceneheader':						//used in CA_SHELL, PAPS & ASCE						_createSceneHeader(ui);						break;					case 'slideheader':						//used in PAPS & ASCE						_createSlideHeader(ui);						break;										case 'sectionheader':						//used in PAPS & ASCE						_createSectionHeader(ui);						break;					// CORE IMAGE UI					case 'bodyimage':						//used in CA_SHELL, PAPS & ASCE						_createBodyImage(ui);						break;					case 'bodyicon':						//used in ASCE						_createBodyImage(ui,true);						break;					case 'bodyimageglow':						//used in CA_SHELL, PAPS & ASCE						_createBodyImageGlow(ui);						break;					case 'bodyimagecascade':						//used in PAPSmod3000						_createBodyImageCascade(ui);						break;					case 'imageadd':						//used in SHELL_CA						_createBodyImageAdd(ui);						break;					case 'imagereplace':						//used in SHELL_CA						_createBodyImageReplace(ui);						break;					case 'logoreplace':						_createBodyImageReplace(ui,"logo");						break;										//Text and Bullets					case 'bodybullet':						//used in SHELL_CA, PAPS & ASCE						_createBodyBullet(ui);						break;					case 'bodybulletcol':						//used in SHELL_CA, PAPS & ASCE						_createBodyBulletCol(ui);						break;					case 'bodytext':						//used in SHELL_CA						_createBodyText_timeSync(ui);						break;					case 'bodycopy':						//can't find in recent projects					//	_createBodyCopy(ui);						break;					case 'bodytable':						//used in PAPS mod3000						_createBodyTable(ui);						break;										case 'textreplace':						//can find in recent projects						//_createBodyTextReplace(ui);						break;					case 'bodynote':						//used in PAPS (mod3000)						_createBodyNote(ui);						break;					case 'slideendnote':						//used in PAPS & ASCE						_create_SlideEndNote(ui);						break;										case 'bodypages':						//used in PAPS (mod3000)						_createBodyPages(ui);						break;									// Button UI					case 'bodybutton':						//used in PAPS & ASCE						_createBodyButton(ui);						break;																			// Animations and extra Timelines					case 'bodyanimswf':						//not found in recent projects						_createBodyAnimSWF(ui);						break;										case 'bodymc':						//not found in recent projects						//	_createBodyMC(ui);						break;					case 'bodyanim':						//used in PAPS (mod4000)						_createBodyAnim(ui);						break;					//TimeLines					case 'bodytimeline':						//used in PAPS (mod4000)						_hasSlideTimelines = true;						innerTLs = ui;						break;					case 'c2r_mapicon':						_create_c2rMapIcon(ui);												break;					case 'coverflowbodytext':						_createCoverFlow_text(ui);						break;										//C2R SLIDE CONTENT					case 'c2rheader':						_createWidgetHeader(ui)						break;					case 'imagecoverflow':						_createCoverFlow_bodyImage(ui);						break;					// Activity UI					case 'act':						//used in CA_SHELL, PAPS, & ASCE						_hasActivity = _createActivity(ui);						//	trace('*****************actbodyui=' + actbdyui.name + 'trans = ' + actbdyui.trans + '<<<<<<<<<<<*******');						//	_slideContent.addChild(actbdyui);						//	_slideItems.push(actbdyui);						break;					default:						trace("********************** MISSING UI TYPE ***************************");										}							}						if (_hasActivity){		//		trace('HAS ACTIVITY');			}			if (_hasSlideTimelines){				_timeline_internal(innerTLs);			}						var slideAnimType:String = _currentSlideObject.slideAnimType;			_slideHasUIAnimations = true;			if (_hasSlideMedia){				//slide has media to sync with				_addSlideMedia(slideMediaXML);			//	trace("/////MEDIA HAS MeDIA////////");			} else {				//slid edoesn't have media but may have animation				_slideHolder.addChild(_slideContent);				//if animsync wasn't set on XML, then it was set to defaultsync, so now i can set it as timesync or animsync..				if (slideAnimType =="defaultsync") {					slideAnimType = "animsync";				}				if (slideAnimType == 'animsync'){			//		trace("/////BEFORE////////");					_slideItems.sort(customSortAlgo);			//		trace("/////AFTER////////");					this.renderArr();					_timeline_timesync();				} else if (slideAnimType == 'none'){					_slideHasUIAnimations = false;					_slideReady(false);			//		trace("/////slideAnimType NONE ////////");				} else if (slideAnimType=='timesync'){				//	trace("/////TIME SYNC no MeDIA////////");					_timeline_timesync();				}			}				}				private function _addSlideMedia(smxml:XML):void		{			var mpath:String =  smxml.@url;			var slideDuration:Number = smxml.@duration;			var mediatype:String = smxml.@mediaType;			var ebytes:Number = smxml.@size;						var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA+ mpath;			_slideMediaSync = new MediaSync();			_slideMediaSync.addEventListener(MediaSync.MEDIA_LOAD_COMPLETE, _slideMedia_loaded);			_slideMediaSync.init(mediatype,fullpath,ebytes,slideDuration);			//_slideAudioSync = new SlideAudioSync();			//	_slideAudioSync.addEventListener(SlideAudioSync.AUDIO_LOAD_COMPLETE, _slideAudio_loaded);		}		private function _slideMedia_loaded(sevt:Event):void		{			//	trace('_slideMedia_loaded='+ _slideMediaSync.mediaType);			if (_slideMediaSync.mediaType == 'vid'){				var vidUI:BodyUI = _slideMediaSync.mediaHolder;				vidUI.x = 50;				vidUI.y = 40;								_slideContent.addChild(vidUI);				//_slideItems.push(_slideMediaSync.mediaHolder);			}			_slideHolder.addChild(_slideContent);			_slideMediaDuration = _slideMediaSync.mediaDuration;//  _slideAudioSync.audioDuration;			_timeline_timesync();						//_buildAudioSyncSlideTimeLine(_slideMediaDuration);		}						/**		 * 		 * SLIDE TIMELINE FUNCTIONS		 * 		 * */				//_buildInternalTimelines		private function _timeline_internal(uinode:XML):void		{						var bodyTL:BodyTimeLine = new BodyTimeLine();						var syncType:String = uinode.@syncType;			var syncOrder:Number = uinode.@syncOrder;			var syncTime:Number = uinode.@syncTime;						var syncTL:TimelineMax = new TimelineMax();						//	var iTrans:String = uinode.@trans;			//	var iEase:String = uinode.@ease;						var uitype:String = uinode.@type;			bodyTL.init(uinode.@uid,syncOrder,uitype);						var itemXML:XMLList = uinode.*;									for each (var item:XML in itemXML) 			{ 				var innerTL:TimelineMax;								var animid:String = item.@id;				var animtype:String = item.@animType;				var animtarget:String = item.@target;				//	trace('animid = '+ animid + 'animtype= '+ animtype + 'animtarget'+ animtarget);				var bodyui:BodyUI;								switch (animtype) {					case 'glow':						for (var j:int = 0; j < _slideItems.length; j++){							bodyui = _slideItems[j];							if (bodyui.id == animtarget){								innerTL= new TimelineMax({repeat:1});								innerTL.append(new TweenMax(bodyui,1,{glowFilter:{color:PULSE_COLOR_CODE, alpha:_glowAlpha,blurX:_glowX,blurY:_glowY,quality:_glowQuality,strength:_glowStrength},ease:Bounce.easeOut}));								innerTL.append(new TweenMax(bodyui,1,{glowFilter:{color:PULSE_COLOR_CODE, alpha:_glowAlpha,blurX:_glowX,blurY:_glowY,quality:_glowQuality,strength:0}}));								syncTL.append(innerTL);							}						}						break;					case 'fadeOut':						//		trace("hhhhh->" + _fadeOutItems.length);																		innerTL = new TimelineMax();						//innerTL.insertMultiple(_fadeOutItems,0,TweenAlign.START);												innerTL.appendMultiple(_fadeOutItems); 						//innerTL.insertMultiple(_fadeOutItems, 1, {alpha:0), innerTL.duration );						syncTL.append(innerTL);						break;									}							}						bodyTL.tlmax = syncTL;			_slideItems.push(bodyTL);		}				/**		 *  MAIN SLIDE TIME LINE BUILDER		 * 		 */				//_buildSlideTimeLine_timesync		private function _timeline_timesync():void		{			var slideAnimType:String = _currentSlideObject.slideAnimType;			trace('slideAnimType===' + slideAnimType +'  _slideStartDelay= '+ _slideStartDelay);			_slideTL = new TimelineMax({paused:true,delay:_slideStartDelay});			var soArray:Array = new Array();			var addTween:Boolean;// = true;			var bodyui:BodyUI; //_slideItems[i] as BodyUI;			var btype:String;// bodyui.type;			var tt:Number;  //bodyui.time;			var tIn:Number; // bodyui.timeIn;			var tOut:Number; // bodyui.timeOut;			var otrans:String;//g = otrans0.toLowerCase();						var bid:String;// = bodyui.id;						var twlin:TweenLite;			var twlout:TweenLite;						var bdyLayoutMod:String; 			var contentTL:TimelineMax = new TimelineMax();						for(var i:Number = 0; i < _slideItems.length; i++){				addTween = true;				bodyui = _slideItems[i] as BodyUI;				bid = "lbl"+ bodyui.id;				btype = bodyui.type;				tt = bodyui.time;				//	tt = (bodyui.hasOwnProperty(bodyui.time))?bodyui.time:1;								tIn =  bodyui.timeIn;				//	trace('bodyui.timeOut = '+ bodyui.timeOut);				tOut = (bodyui.hasOwnProperty("timeOut"))?bodyui.timeOut:9999;				//trace('tOut= '+ tOut);				bdyLayoutMod = (bodyui.layoutModifier != "" || bodyui.layoutModifier != null)?bodyui.layoutModifier:"none";				otrans = String(bodyui.trans).toLowerCase();							var addTL:Boolean = false;								if (bdyLayoutMod == "flipx"){					var fliptrans:String;					if (otrans == "slideleft") {						fliptrans = "slideright";					} else if (otrans == "slideright"){						fliptrans = "slideleft";					} else {						fliptrans = otrans;					}					otrans = fliptrans;				}								trace("otrans==== " + otrans + 'bodyui.name=' + bodyui.name);				switch(otrans) {					case 'animbuild':						var bdyswf:BodyAnimSWF = bodyui as BodyAnimSWF;						var tmax:TimelineMax = bdyswf.animTL as TimelineMax;																		//var tmax:TimelineMax = bdyswf.animTL;												contentTL.add(tmax,0);						//_slideTL.add(tmax,0);						break;					case 'leftinrightout':						twlin = TweenLite.from(bodyui,tt,{x:800,alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						//_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{x:"+100",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}												break;					case 'rightinleftout':						twlin = TweenLite.from(bodyui,tt,{x:-800,alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{x:"-100",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}												break;					case 'slideleft':						if (String(bodyui.ease).toLowerCase() == 'backeaseout'){							twlin = TweenLite.from(bodyui,tt,{x:800,alpha:0,ease:Back.easeOut,easeParams:[1]});						} else {							twlin = TweenLite.from(bodyui,tt,{x:800,alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						}											//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{x:"-100",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}												break;					case 'slideright':						if (String(bodyui.ease).toLowerCase() == 'backeaseout'){							twlin = TweenLite.from(bodyui,tt,{x:-400,alpha:0,ease:Back.easeOut,easeParams:[1]});						} else {							twlin = TweenLite.from(bodyui,tt,{x:-400,alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						}						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{x:"+100",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}												break;					case 'flowleft':						twlin = TweenLite.from(bodyui,2,{x:630,alpha:.5,ease:Quint.easeOut});						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{x:"-100",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}												break;					case 'slidedown':						if (String(bodyui.ease).toLowerCase() == 'backeaseout'){							twlin = TweenLite.from(bodyui,tt,{y:"-100",alpha:0,ease:Back.easeOut,easeParams:[1]});						} else {							twlin = TweenLite.from(bodyui,tt,{y:"-100",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						}						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{y:"+100",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}												break;					case 'fadeup':						if (String(bodyui.ease).toLowerCase() == 'backeaseout'){							twlin = TweenLite.from(bodyui,tt,{y:"+10",alpha:0,ease:Back.easeOut,easeParams:[1]});						} else {							twlin = TweenLite.from(bodyui,tt,{y:"+10",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						}						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{y:"-10",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}												break					case 'slideup':						if (String(bodyui.ease).toLowerCase() == 'backeaseout'){							twlin = TweenLite.from(bodyui,tt,{y:"+643",alpha:0,ease:Back.easeOut,easeParams:[1]});						} else {							twlin = TweenLite.from(bodyui,tt,{y:"+643",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						}						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{y:"-20",alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}												break					case 'zoomfade':						twlin = TweenMax.to(bodyui, 1,{transformAroundCenter:{scale:1},alpha:1,startAt:{transformAroundCenter:{scale:.9},alpha:0}});						//	twlin = TweenLite.from(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,.5,{alpha:0});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}						break;					case 'zoomup':						bodyui.alpha = 0;						twlin = TweenMax.to(bodyui, 1,{transformAroundCenter:{scale:2},alpha:1,x:"+200",y:"-100"});						//	twlin = TweenMax.from(bodyui,2, {transformAroundCenter:{scale:0.8},alpha:0.5,x:"+20",y:"+20",ease:Back.easeOut});						//twlin = TweenLite.to(bodyui, 1, {transformAroundCenter:{scale:1.2},alpha:1,x:"-20", y:"-20",ease:Back.easeOut});						//	twlin = TweenLite.from(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}						break;					case 'zoomfrom':						bodyui.alpha = 0;						twlin = TweenMax.to(bodyui, 1,{transformAroundCenter:{scale:1},alpha:1,x:"-25",y:"-10",startAt:{transformAroundCenter:{scale:.7}}});					//	twlin = TweenMax.from(bodyui,2, {transformAroundCenter:{scale:0.8},alpha:0.5,x:"+20",y:"+20",ease:Back.easeOut});						//twlin = TweenLite.to(bodyui, 1, {transformAroundCenter:{scale:1.2},alpha:1,x:"-20", y:"-20",ease:Back.easeOut});						//	twlin = TweenLite.from(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}						break;					case 'zoomin':						bodyui.alpha = 0;						twlin = TweenLite.to(bodyui, 1, {transformAroundCenter:{scale:2},alpha:1, y:"+50",ease:Back.easeOut});						//	twlin = TweenLite.from(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}						break;					case 'fadein':						twlin = TweenLite.from(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}						break;					case 'fadeon':						twlin = TweenLite.from(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});						//	_slideTL.insert(twlin,tIn);						if (tOut < 999) {							twlout = TweenLite.to(bodyui,tt,{alpha:0,ease:CustomEaseHelper.find(bodyui.ease)});							contentTL.add(twlout,tOut);							//_slideTL.add(twlout,tOut);						}						break;					case 'coverflow':						addTL = true;						var cftl:TimelineMax = new TimelineMax();						cftl.add(TweenMax.to(_coverFlowImages,.5,{x:"-250",ease:Quint.easeOut}),.1);						cftl.add(TweenLite.to(bodyui, .5, {transformAroundCenter:{scale:1.5},alpha:1,ease:Back.easeOut,onStart:_arrangeCFimages,onStartParams:['active',bodyui]}));											//_slideTL.insert(cftl,tIn);						if (tOut < 999) {							var cftlout:TimelineMax = new TimelineMax();							cftlout.add(TweenLite.to(bodyui, .4, {transformAroundCenter:{scale:1},alpha:.8,ease:Quint.easeOut}));													//	cftlout.append(TweenLite.to(bodyui, .4, {transformAroundCenter:{scale:1},alpha:.8,ease:Quint.easeOut}));							contentTL.add(cftlout,tOut);						}						/*						var cftl:TimelineMax = new TimelineMax();						cftl.appendMultiple(TweenMax.allTo(_coverFlowImages,.5,{x:"-250",ease:Quint.easeOut}),.1);						cftl.append(TweenLite.to(bodyui, .5, {transformAroundCenter:{scale:1.5},alpha:1,ease:Back.easeOut,onStart:_arrangeCFimages,onStartParams:['active',bodyui]}));						_slideTL.insert(cftl,tIn);						if (tOut < 999) {						var cftlout:TimelineMax = new TimelineMax();						cftlout.append(TweenLite.to(bodyui, .4, {transformAroundCenter:{scale:1},alpha:.8,ease:Quint.easeOut}));						_slideTL.insert(cftlout,tOut);						}						*/						break;					case 'frametriggers':						var bdyAnim:BodyAnim = bodyui as BodyAnim;						for each (var item:XML in bdyAnim.triggers) 					{ 						var trigtype:String = item.@type;						var trigid:String = item.@id;						var trigtimein:Number = item.@timeIn;						contentTL.addCallback(_frameTrigger,trigtimein,[trigtype,trigid,bdyAnim]);						//_slideTL.addCallback(_frameTrigger,trigtimein,[trigtype,trigid,bdyAnim]);																	}						break;					case 'pageon':												bid = 'bodypages';						twlin =	TweenLite.delayedCall(.5, _playPages, ["playpages",bodyui]);						//_slideTL.addCallback(_slideTL_handler,_slideTotalDuration);						//	_slideTL.add(_playPages, bid);						//twlin = _playPages();						//var pagestl:TimelineMax = new TimelineMax({onStart:_playPages,onStartParams:["playpages",bodyui]});						//pagestl.addLabel('playpages',2);						//pagestl.addCallback(_playPages,.4,["pagescallback",bodyui]);												//soArray.push(pagestl);						break;					case 'playsnd':						bid = 'playsnd';						twlin =	TweenLite.delayedCall(.5, _playSndFX,["playsnd",bodyui]);						//	addTween = false;						//	var sndtl:TimelineMax = new TimelineMax();						//	sndtl.addCallback(_playSndFX,0,["playsnd",bodyui]);												//	soArray.push(sndtl);						break;					default:						trace('default issue');										}												if (slideAnimType == 'timesync'){				//	_slideTL.add(bid,tIn);					//_slideTL.add(twlin,tIn);					//adding time label					contentTL.add(bid,tIn);					//adding tween at new label					if (addTL){					contentTL.add(cftl,tIn);					} else {					contentTL.add(twlin,tIn);					}				} else  {					//_slideTL.add(twlin, bid);					if (otrans != 'animbuild'){					contentTL.add(twlin, bid);					}				}								if (bodyui.target != null){					//trace('bodyui.target'+bodyui.target);					//_slideTL.call(_sync_Handler, [bodyui.target,bodyui.targetTrigger,bodyui.targetParams],bid) ; 					contentTL.call(_sync_Handler, [bodyui.target,bodyui.targetTrigger,bodyui.targetParams],bid) ; 				}								var hasTriggers:Boolean = bodyui.hasTrigData;								if (hasTriggers){					var trigsXML:XMLList = bodyui.triggers.*;					for each(var trig:XML in trigsXML) {						//use time to set delay on glow						var trigTime:Number = trig.@time;						var trigIn:Number = trig.@timeIn;						var trigOut:Number = (trig.hasOwnProperty("@timeOut"))?trig.@timeOut:999;												var dur:Number;												if (trigOut > 900 || trigOut < trigIn) {							dur = 999						} else {							dur = trigOut - trigIn;						}						//_slideTL.insert(bodyui.animateStart(trig.@type,"blue",dur, trigTime),trigIn);					//	contentTL.insert(bodyui.animateStart(trig.@type,						contentTL.insert(bodyui.animateStart(trig.@type,PULSE_COLOR,dur, trigTime),trigIn);												//if(trig.@type == 'glow') {												//_slideASTL.addCallback(_triggerStartHandler,trig.@timeIn,[trig.@type,bodyui,trig.@timeIn,trigOut,trig.@repeat]);					}									}							}			/*			if (_hasSceneAnimation && _currentSlideIndex == 0){				trace('inserting scenetimeline');				_slideTL.add(_sceneTL,0);			}						if (soArray.length > 0){			_slideTL.appendMultiple(soArray,0,TweenAlign.SEQUENCE,0.5);			}			*/						//trace("timline before scene=" + contentTL.totalDuration());			if (_hasSceneAnimation && _currentSlideIndex == 0){				//trace('inserting scenetimeline totalDuration=' + _sceneTL.totalDuration());				_slideTL.add(_sceneTL,0);			}			_slideTL.add(contentTL);					var slideDurNoMedia:Number = _slideTL.totalDuration();/// _slideTL.totalDuration;						//_slideMediaDuration = _slideMediaSync.mediaDuration;			//trace("slideDurNoMedia =" +slideDurNoMedia + "_slideMediaDuration =" +_slideMediaDuration + "_slidemediatime=" + _slideMediaSync.mediaTime);					if (_slideMediaDuration > slideDurNoMedia){				var perciseSlideDuration:Number = MathUtils.roundDecimal(_slideMediaDuration,2);				_slideTotalDuration = perciseSlideDuration;							}  else {				_slideTotalDuration = slideDurNoMedia;			}						//trace('_slideTotalDuration= ' + _slideTotalDuration);															_slideTL.addCallback(_slideTL_handler,_slideTotalDuration);			//	trace("_slideASTL.totalDuration with audio =" + _slideASTL.totalDuration);			//_slideASTL.totalDuration = slideduration;			//var numKids:Array = _slideTL.getChildren();			//	trace('numKids= '+ numKids.length);						_asSlideStart(_slideTL);								}				/**		 *  Integrating AudioSync Capabilities from shell_ca		 * 		 */		public function trackSlideByID(slideID:String):void		{			var thisIndex:int = _trackedSlideIDArray.lastIndexOf(slideID);						if (thisIndex == -1){				_trackedSlideIDArray.push(slideID);							}						//	trace('_trackedSlideIDArray.length= ' + _trackedSlideIDArray.length);					}				public function isSlideIDTracked(sldID:String):Boolean		{			var slideTracked:Boolean;			if (_trackedSlideIDArray.indexOf(sldID) >= 0){				slideTracked = true;			} else {				slideTracked = false;			}						return slideTracked;		}				private function _asSlideStart(tlmax:TimelineMax):void		{						_currentSlideID = _currentSlideObject.slideID;						var isSlideTracked:Boolean;			var isTracked1:Boolean = _currentSlideObject.isTracked;//true;//			var isTracked2:Boolean = this.isSlideIDTracked(_currentSlideObject.slideID); //true;// 			//	var isTracked1:Boolean = _currentSlideObject.isTracked;			//	var isTracked2:Boolean =  this.isSlideIDTracked(_currentSlideObject.slideID); 							//trace(">>>>>>>>>>>>>>>>>_currentSlideID= " + _currentSlideID + ' --isTracked-- ' + isTracked1 + '-----IDtracked---- '+isTracked2);			if (isTracked1 == true || isTracked2 == true) {				isSlideTracked = true			} else {				isSlideTracked = false			}			//	trace('_isCurrentSlideTracked= ' + isSlideTracked);						if (_slideHasUIAnimations){				//_slidePlayer.x = 280;				//	_slidePlayer.y = 532;//562;// 558;				this.addChild(_slidePlayer);				if (_hasSlideMedia){					//		_slideController.setupSlideController(tlmax,_slideMediaSync,isSlideTracked);					//_slideController.setupSlideController(tlmax,_slideMediaSync,isSlideTracked);					_slidePlayer.setupSlideController(tlmax,_slideMediaSync,isSlideTracked);					_showSlidePlayer = true;				} else {					_slidePlayer.setupSlideController(tlmax,null,isSlideTracked);				}								//_slidePlayer.startSlideController();			}												if (_showSlidePlayer){				if (_sceneType == 'splash' || _sceneType == 'coursecomplete'){					_slidePlayer.visible = false;// = 0;				} else {										if (_slideTotalDuration < 4){						_slidePlayer.visible = false;// 					} else {						_slidePlayer.visible = true;// 					}				}			}else {				_slidePlayer.visible = false;// = 0;			}						var allcontentready:Boolean = _verifySlideContentIsLoaded();			if (allcontentready) {				_slideReady();			} else {				var contentReadyTimer:Timer = new Timer(100, 0);				contentReadyTimer.addEventListener(TimerEvent.TIMER, _contentReady_timerHandler);				contentReadyTimer.start();			}		}				private function _contentReady_timerHandler(event:TimerEvent):void		{			var isReady:Boolean = _verifySlideContentIsLoaded();			if (isReady) {				Timer(event.target).stop();				_slideReady();			}		}		private function _verifySlideContentIsLoaded():Boolean	{		var allready:Boolean = true;		var bdyui:BodyUI;				for( var i:int= 0 ;i < _slideItems.length; i++) {			bdyui = _slideItems[i] as BodyUI;			//trace('bdyui name= '+ bdyui.name + '  -isContentReady='+ bdyui.contentReady + "<<<");			if (!bdyui.contentReady) {				allready = false;				break;			}		}				return allready;	}		/** 		 * 		 *  Create SLIDE UI Elements (BodyUI)		 * 		 *  */		// vvvvvv		private function _createBodyBullet(uinode:XML):void		{			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;			var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number = (uinode.hasOwnProperty("@margin"))?uinode.@margin:20;						var uTime:Number = (uinode.hasOwnProperty("@time"))?uinode.@time:1;			var uTrans:String = (uinode.hasOwnProperty("@trans"))?uinode.@trans:"none";			var uEase:String = (uinode.hasOwnProperty("@ease"))?uinode.@ease:"none";									var ufontsize:Number = (uinode.hasOwnProperty("@fontSize")) ? uinode.@fontSize : _sceneTextObject.box_fontSize;// SHELL_VARS.DEFAULT_FONTSIZE;			var ufontcolor:String = (uinode.hasOwnProperty("@fontColor")) ? uinode.@fontColor :_sceneTextObject.box_fontColor;//  SHELL_VARS.DEFAULT_FONTCOLOR;			var ufontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle :_sceneTextObject.box_fontStyle;// SHELL_VARS.DEFAULT_FONTSTYLE;			//var ufontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : "center";//SHELL_VARS.DEFAULT_FONTALIGN;					//	var ufontsize:Number= (uinode.hasOwnProperty("@fontSize"))?uinode.@fontSize:16;		//	var ufontcolor:String= (uinode.hasOwnProperty("@fontColor"))?uinode.@fontColor:"default";			var uformattype:String = (uinode.hasOwnProperty("@formatType"))?uinode.@formatType:"normal";						var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin,_layoutModifier);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var syncType:String = (uinode.hasOwnProperty("@syncType"))?uinode.@syncType:"buildy";						var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:margin;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:10;						var bulletXML:XMLList = uinode.*;			for each (var item:XML in bulletXML) 			{ 												var formattype:String = (item.hasOwnProperty("@formatType"))?item.@formatType:uformattype;				var fontsize:Number = (item.hasOwnProperty("@fontSize"))?item.@fontSize:ufontsize;				var fontcolor:String = (item.hasOwnProperty("@fontColor"))?item.@fontColor:ufontcolor;				var iw:Number = (item.hasOwnProperty("@width"))?item.@width:uW;				var ih:Number = (item.hasOwnProperty("@height"))?item.@width:uH;				var ordernum:int = int(item.@order);				var isDialog:Boolean = false;				var ui_height:Number;								if (item.dialogLabel != undefined) {					var bdy1:BodyUI = new BodyUI();					isDialog = true;					var bb1label_txt:String = item.dialogLabel;					var bb1text_txt:String = item.dialogText;					//bdy1.order=ordernum;					bdy1.name = item.@id;					bdy1.id =item.@id;					bdy1.order = ordernum;					bdy1.time = (item.hasOwnProperty("@time"))?item.@time:uTime;										bdy1.timeIn = item.@timeIn;					bdy1.timeOut = item.@timeOut;					bdy1.layoutModifier = _layoutModifier;										bdy1.trans = (item.hasOwnProperty("@trans"))?item.@trans:uTrans;					bdy1.ease = (item.hasOwnProperty("@ease"))?item.@ease:uEase;										var bdy_label:BodyBullet = new BodyBullet();					bdy_label.init(item.dialogLabel,iw,"bold",fontsize,fontcolor,FONT_NAME,_languageID);					bdy1.addChild(bdy_label);										var bdy_txt:BodyBullet = new BodyBullet();					bdy_txt.init(item.dialogText,iw,formattype,fontsize,fontcolor,FONT_NAME,_languageID);					bdy_txt.y = bdy_label.uiHeight;					bdy1.addChild(bdy_txt);								ui_height = int(bdy_label.uiHeight + bdy_txt.uiHeight);									} else {													var bb1:BodyBullet = new BodyBullet();								bb1.init(item,iw,formattype,fontsize,fontcolor,FONT_NAME,_languageID);				//bb1.init(item,iw,formattype,fontsize,fontcolor,FONT_NAME,_languageID);				bb1.name = item.@id;				bb1.id =item.@id;				bb1.order = ordernum;				bb1.time = (item.hasOwnProperty("@time"))?item.@time:uTime;								bb1.timeIn = item.@timeIn;				bb1.timeOut = item.@timeOut;								bb1.layoutModifier = _layoutModifier;				bb1.trans = (item.hasOwnProperty("@trans"))?item.@trans:uTrans;				bb1.ease = (item.hasOwnProperty("@ease"))?item.@ease:uEase;									if (item.hasOwnProperty("@target")) {						bb1.target = item.@target;						bb1.targetTrigger = item.@targetTrigger;						bb1.targetParams = item.@targetParams;					} 									ui_height = int(bb1.uiHeight);									}				var ix:String = (item.hasOwnProperty("@x")) ? item.@x : groupX;				var iy:String = (item.hasOwnProperty("@y")) ? item.@y : groupY;			//	trace("ui_height = "+ ui_height + "yHolder = "+ yHolder  );				var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :uxpad;				var ypad:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad :uypad;				var newX:Number;				var newY:Number;								if (syncType == 'buildy'){					newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,iw,xpad,_layoutModifier);					newY = yHolder + ypad;					yHolder = newY + ui_height;// int(bb1.height);				} else {									newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,iw,xpad,_layoutModifier);					newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,ih,ypad);					//newX = (!isNaN(Number(ix)))?Number(ix):_relativeLayoutConverter(ix,iw,uPadding);					//newY = (!isNaN(Number(iy)))?Number(iy):_relativeLayoutConverter(iy,ih,uPadding);				}												if (isDialog) {					bdy1.x = newX;					bdy1.y = newY;										//	yHolder = newY + int(bb1.height) + uPadding;// + ypad;					_slideContent.addChild(bdy1);					_slideItems.push(bdy1);				} else {					bb1.x = newX;					bb1.y = newY;										//	yHolder = newY + int(bb1.height) + uPadding;// + ypad;					_slideContent.addChild(bb1);					_slideItems.push(bb1);				}							}		}		/* ************** BODY BULLET COLUMN (new) ******************** */		// vvvvvvv		private function _createBodyBulletCol(uinode:XML):void		{						var uW:Number = uinode.@width;			var uH:Number = uinode.@height;			var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number =  (uinode.hasOwnProperty("@margin"))?uinode.@margin:20;						var uTrans:String = uinode.@trans;			var uEase:String = uinode.@ease;						var uTime:Number= (uinode.hasOwnProperty("@time"))?uinode.@time:1;			var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin,_layoutModifier);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var ufontsize:Number = (uinode.hasOwnProperty("@fontSize")) ? uinode.@fontSize : _sceneTextObject.box_fontSize;// SHELL_VARS.DEFAULT_FONTSIZE;			var ufontcolor:String = (uinode.hasOwnProperty("@fontColor")) ? uinode.@fontColor :_sceneTextObject.box_fontColor;//  SHELL_VARS.DEFAULT_FONTCOLOR;			var ufontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle :_sceneTextObject.box_fontStyle;// SHELL_VARS.DEFAULT_FONTSTYLE;			//var ufontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : "center";//SHELL_VARS.DEFAULT_FONTALIGN;									//var ufontsize:Number= (uinode.hasOwnProperty("@fontSize"))?uinode.@fontSize:12;			//var ufontcolor:String= (uinode.hasOwnProperty("@fontColor"))?uinode.@fontColor:"black";			var utextStyle:String = (uinode.hasOwnProperty("@textStyle"))?uinode.@textStyle:"bullet";						var syncType:String = (uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"buildx";						var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;						var fontFrame:Boolean= (uinode.hasOwnProperty("@frame"))?true:false;			var itemXML:XMLList = uinode.*;			//trace("iW= " + iW);			var bb1:BodyBulletCol; 			for each (var item:XML in itemXML) 			{ 				bb1 =  new BodyBulletCol();				var ordernum:int = int(item.@order);				var iw:Number = (item.hasOwnProperty("@width"))?item.@width:uW;				var ih:Number = (item.hasOwnProperty("@height"))?item.@height:uH;				var fontsize:Number= (item.hasOwnProperty("@fontSize"))?item.@fontSize:ufontsize;				var fontcolor:String= (item.hasOwnProperty("@fontColor"))?item.@fontColor:ufontcolor;				var textStyle:String = (item.hasOwnProperty("@textStyle"))?item.@textStyle:utextStyle;								bb1.init(item,iw,fontsize,fontcolor,textStyle,fontFrame,FONT_NAME,_languageID);				bb1.id = item.@id;				bb1.order = ordernum;				bb1.time = (item.hasOwnProperty("@time"))?item.@time:uTime;				bb1.timeIn = item.@timeIn;				bb1.timeOut = item.@timeOut;				bb1.layoutModifier = "none";				//	bb1.init(item.@id,ordernum,item.@time,item,iW);				bb1.name = item.@id;				bb1.trans = uTrans;				bb1.ease = uEase;								bb1.layoutModifier = _layoutModifier;				if(item.hasOwnProperty("@target")){					bb1.targetTrigger = item.@targetTrigger;					bb1.targetParams = item.@targetParams;					bb1.target = item.@target;				}								var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :uxpad;				var ypad:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad :uypad;				var newX:Number;				var newY:Number;				if (syncType == 'buildx'){					if (_layoutModifier == 'flipx'){						newX = xHolder - xpad;						newY = yHolder;						xHolder = newX - iw;					} else {					newX = xHolder + xpad;					newY = yHolder;					xHolder = newX + iw;					}				} else if (syncType == 'buildy') {					newX = xHolder;// + xpad;					newY = yHolder + ypad;					yHolder = newY + bb1.height;				} else {										var ix:String = (item.hasOwnProperty("@x")) ? item.@x : groupX;					var iy:String = (item.hasOwnProperty("@y")) ? item.@y : groupY;					newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,iw,margin,_layoutModifier);					newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,ih,margin);				}				bb1.x = newX;				bb1.y = newY;				_slideContent.addChild(bb1);				_slideItems.push(bb1);				//_slideItems.push({ordernum,bb1});			}		}				/**		 * Create the BodyText for Slide Animation		 */		private function _createBodyText_timeSync(uinode:XML, isLabelText:Boolean = false):void		{						var _slideItemsForAnim:Array = new Array();			var uW:Number =  uinode.@width;			var uH:Number =  uinode.@height;// : _timelineParams.uiHeight;						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";									var uOrder:int = (uinode.hasOwnProperty("@order"))?uinode.@order:1;						var margin:Number = (uinode.hasOwnProperty("@padding")) ? uinode.@margin :0;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans :  SHELL_VARS.DEFAULT_TRANS;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease :  SHELL_VARS.DEFAULT_EASE;			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect :  SHELL_VARS.DEFAULT_EFFECT;			var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time :  1;			var ufontsize:Number = (uinode.hasOwnProperty("@fontSize")) ? uinode.@fontSize : _sceneTextObject.box_fontSize;// SHELL_VARS.DEFAULT_FONTSIZE;			var ufontcolor:String = (uinode.hasOwnProperty("@fontColor")) ? uinode.@fontColor :_sceneTextObject.box_fontColor;//  SHELL_VARS.DEFAULT_FONTCOLOR;			var ufontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle :_sceneTextObject.box_fontStyle;// SHELL_VARS.DEFAULT_FONTSTYLE;			var ufontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : "center";//SHELL_VARS.DEFAULT_FONTALIGN;						var uSyncType:String = (uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"add";						var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;						var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var bulletXML:XMLList = uinode.*;						for each (var bodyBullet:XML in bulletXML) 			{ 				var bid:String = bodyBullet.@id;				var ord:int = (bodyBullet.hasOwnProperty("@order"))?bodyBullet.@order:uOrder;				var itime:Number =  (bodyBullet.hasOwnProperty("@time")) ? bodyBullet.@time : uTime;								var bw:Number = (bodyBullet.hasOwnProperty("@width")) ? bodyBullet.@width : uW;				var bh:Number = (bodyBullet.hasOwnProperty("@height")) ? bodyBullet.@height : uH;												var bx:String = (bodyBullet.hasOwnProperty("@x")) ? bodyBullet.@x : groupX;				var by:String = (bodyBullet.hasOwnProperty("@y")) ? bodyBullet.@y : groupY;												var synctype:String =(bodyBullet.hasOwnProperty("@syncType")) ? bodyBullet.@syncType : uSyncType;								var tIN:Number = (bodyBullet.hasOwnProperty("@timeIn")) ? bodyBullet.@timeIn : 0;				var tOUT:Number = (bodyBullet.hasOwnProperty("@timeOut")) ? bodyBullet.@timeOut : 999;								var fsize:Number = (bodyBullet.hasOwnProperty("@fontSize")) ? bodyBullet.@fontSize :ufontsize;				var fcolor:String = (bodyBullet.hasOwnProperty("@fontColor")) ? bodyBullet.@fontColor : ufontcolor;				var falign:String = (bodyBullet.hasOwnProperty("@fontAlign")) ? bodyBullet.@fontAlign :ufontalign;				var fstyle:String = (bodyBullet.hasOwnProperty("@fontStyle")) ? bodyBullet.@fontStyle : ufontstyle;								var bullettxt:String;				if (bodyBullet.label != undefined){					bullettxt = bodyBullet.label;				} else {					bullettxt = bodyBullet;				}				var btrans:String = (bodyBullet.hasOwnProperty("@trans")) ? bodyBullet.@trans : uTrans;				var bease:String = (bodyBullet.hasOwnProperty("@ease")) ? bodyBullet.@ease : uEase;				var asb:BodyText = new BodyText();							asb.init(bullettxt,bw,bh,fstyle,fsize,fcolor,falign,fstyle,margin,FONT_NAME,_languageID);				asb.id = bid;				asb.order =ord;				asb.time = itime;								asb.layoutModifier = _layoutModifier;				asb.trans = btrans.toLowerCase();				asb.ease = bease;				asb.syncType = synctype;				asb.type = "textreplace";				asb.timeIn = tIN;				asb.timeOut = tOUT;				asb.time = itime;													var xpad:Number = (bodyBullet.hasOwnProperty("@xPad")) ? bodyBullet.@xPad :uxpad;				var ypad:Number = (bodyBullet.hasOwnProperty("@yPad")) ? bodyBullet.@yPad :uypad;								var newX:Number;				var newY:Number;				var newH:Number;								if (synctype == 'buildx'){					newX = xHolder + xpad;					newY = yHolder;					xHolder = newX + bw;				} else if (synctype == 'buildy'){					newX = xHolder;// + xpad;					newY = yHolder + ypad;					newH = asb.height;					yHolder = newY + newH;				} else {					var ix:String = (bodyBullet.hasOwnProperty("@x")) ? bodyBullet.@x : groupX;					var iy:String = (bodyBullet.hasOwnProperty("@y")) ? bodyBullet.@y : groupY;					newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,bw,margin);					newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,bh,margin);				}				asb.x = newX;				asb.y = newY; 				_slideContent.addChild(asb);				_slideItems.push(asb);			}		}						// vvvvvvv		private function _createBodyButton(uinode:XML):void		{						//	var animtype:String = anmtype;			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : 20;						var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);			var uOrder:Number = (uinode.hasOwnProperty("@order")) ? uinode.@order : 1;			var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : 1;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			var uStyle:String = (uinode.hasOwnProperty("@style")) ? uinode.@style : "none";			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;			var uPulseColor:String = (uinode.hasOwnProperty("@pulseColor"))?uinode.@pulseColor:"blue";			var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode : "width";//SHELL_VARS.DEFAULT_SCALEMODE;			var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor : SHELL_VARS.DEFAULT_SCALEFACTOR;						var uSyncType:String = (uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"add";						var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;			var itemXML:XMLList = uinode.*;						for each (var item:XML in itemXML) 			{ 				var btntype0:String = item.@type;				var btntype:String =btntype0.toLowerCase();				var iorder:int = (item.hasOwnProperty("@order")) ? item.@order : uOrder;								var itime:Number =  (item.hasOwnProperty("@time")) ? item.@time : uTime;								var iw:Number = (item.hasOwnProperty("@width")) ? item.@width : uW;				var ih:Number = (item.hasOwnProperty("@height")) ? item.@height : uH;												var tIN:Number = (item.hasOwnProperty("@timeIn")) ? item.@timeIn : 0;				var tOUT:Number = (item.hasOwnProperty("@timeOut")) ? item.@timeOut : 999;								var itrans:String = (item.hasOwnProperty("@trans")) ? item.@trans :uTrans;				var iease:String = (item.hasOwnProperty("@ease")) ? item.@ease : uEase;				var istyle:String = (item.hasOwnProperty("@style")) ? item.@style :uStyle;				var ieffect:String = (item.hasOwnProperty("@effect")) ? item.@effect :uEffect;				var itempath:String = item.@url;				var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + itempath;											var uip:UIparams = new UIparams();								uip.uiHeight = ih;				uip.uiWidth = iw;								uip.uiFontSize = item.@fontSize;				uip.uiFontColor = item.@fontColor;				uip.uiFontStyle =  item.@fontStyle;								var btnlbl:String = item;				var pulsecolor:String = (item.hasOwnProperty("@pulseColor"))?item.@pulseColor:uPulseColor;								var shouldBtnBeActive:String = (item.hasOwnProperty("@isActive"))?item.@isActive:"no";				var isBtnActive:Boolean = (shouldBtnBeActive == "yes")?true:false;								var bdyBTN:BodyButton = new BodyButton();				bdyBTN.init(btnlbl,uip,pulsecolor,isBtnActive,FONT_NAME, _languageID);								//bdyBTN.buildButtonStates(btnlbl,uip);				bdyBTN.name = btntype;				bdyBTN.trans = itrans;				bdyBTN.ease = iease;				var orderNum:int;				var transTime:Number;							bdyBTN.order = iorder;								bdyBTN.time = itime;								var syncType:String =(item.hasOwnProperty("@syncType")) ? item.@syncType : uSyncType;								var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :uxpad;				var ypad:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad :uypad;				var newX:Number;				var newY:Number;								if (syncType == 'buildy'){					newX = xHolder;					newY = yHolder + ypad ;					yHolder = newY + ih;// + ypad;				} else if (syncType == 'buildx'){					newX = xHolder  + xpad;					newY = yHolder;					xHolder = newX + iw;// + xpad;				} else if (syncType == 'replace'){					newX = xHolder;					newY = yHolder;				} else {					var ix:String = (item.hasOwnProperty("@x")) ? item.@x : groupX;					var iy:String = (item.hasOwnProperty("@y")) ? item.@y : groupY;					newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,iw,margin);					newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,ih,margin);				}															bdyBTN.x = newX;				bdyBTN.y = newY;								bdyBTN.btnType = btntype;								var doclink:String = (item.hasOwnProperty("@url"))?item.@url:"none";				var docpath:String = _shell_dir+SHELL_VARS.FOLDER_DOCS+doclink;				//	bdyBTN.clickLink = docpath;								switch (btntype){					case 'completeandexit':						if (isBtnActive) {							bdyBTN.isEnabled = true;							bdyBTN.alpha = 1;							bdyBTN.addEventListener(MouseEvent.CLICK, _completeANDexit_clickHandler);													} else {							bdyBTN.isEnabled = false;							bdyBTN.alpha = .4;						}						break;					case 'pdfbtn':						bdyBTN.isEnabled = true;						trace('bbbbb');						bdyBTN.clickLink = docpath;						bdyBTN.alpha = 1;						bdyBTN.useHandCursor = true;						bdyBTN.buttonMode = true;						bdyBTN.addEventListener(MouseEvent.CLICK, _btnPDF_clickHandler);						break;					case 'startcourse':						//bdyBTN.clickLink = docpath;						//	bdyBTN.alpha = 1;						//	bdyBTN.isEnabled = true;						//	bdyBTN.addEventListener(MouseEvent.CLICK, _btnStart_clickHandler);						break;				}												_slideContent.addChild(bdyBTN);				_slideItems.push(bdyBTN);			}		}		// vvvvvvv		private function _createBodyImage(uinode:XML,isIcon:Boolean = false):void		{					//	var animtype:String = anmtype;			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var umargin:Number = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : 0;			var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,umargin,_layoutModifier);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,umargin);						var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : _bodyImageXML.@time;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : _bodyImageXML.@trans;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : _bodyImageXML.@ease;			var uStyle:String = (uinode.hasOwnProperty("@style")) ? uinode.@style : _bodyImageXML.@style;			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : _bodyImageXML.@effect;						var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode :_bodyImageXML.@scaleMode;// "width";//SHELL_VARS.DEFAULT_SCALEMODE;			var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor :_bodyImageXML.@scaleFactor;			var uSyncType:String = (uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"add";			var uCenterIt:Boolean = (uinode.hasOwnProperty("@centerIt"))? true :false;			var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;			var itemXML:XMLList = uinode.*;			for each (var item:XML in itemXML) 			{ 							var iorder:int = item.@order;				var itime:Number =  (item.hasOwnProperty("@time")) ? item.@time : uTime;								var iw:Number = (item.hasOwnProperty("@width")) ? item.@width : uW;				var ih:Number = (item.hasOwnProperty("@height")) ? item.@height : uH;																var tIN:Number = (item.hasOwnProperty("@timeIn")) ? item.@timeIn : 0;				var tOUT:Number = (item.hasOwnProperty("@timeOut")) ? item.@timeOut : 999;						var itrans:String = (item.hasOwnProperty("@trans")) ? item.@trans :uTrans;				var iease:String = (item.hasOwnProperty("@ease")) ? item.@ease : uEase;				var istyle:String = (item.hasOwnProperty("@style")) ? item.@style :uStyle;				var ieffect:String = (item.hasOwnProperty("@effect")) ? item.@effect :uEffect;								var icenter:Boolean = (item.hasOwnProperty("@centerIt")) ? true :uCenterIt;								var centerImg:Boolean = false;				var itempath:String = item.@url;						var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + itempath;												var img:BodyImage = new BodyImage();				img.init(fullpath,uScaleMode,uScaleFactor,iw,ih,istyle,ieffect,centerImg);								img.id = item.@id;				img.name = item.@id;								img.layoutModifier = _layoutModifier;				img.trans = itrans;				img.ease = iease;								img.order = iorder;				img.timeIn = tIN;				img.timeOut = tOUT;				img.time = itime;								var syncType:String =(item.hasOwnProperty("@syncType")) ? item.@syncType : uSyncType;				var imargin:Number = (item.hasOwnProperty("@margin")) ? item.@margin :umargin;				var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :uxpad;				var ypad:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad :uypad;				var itemX:String = (item.hasOwnProperty("@x"))?item.@x:groupX;				var itemY:String = (item.hasOwnProperty("@y"))?item.@y:groupY;				var newX:Number;				var newY:Number;								if (syncType == 'buildy'){					newX = (!isNaN(Number(itemX)))?Number(itemX):SimpleUtils.relativeLayoutConverter(itemX,CONTENT_WIDTH,iw,imargin,_layoutModifier);					//var inewY = (!isNaN(Number(itemY)))?Number(itemY):SimpleUtils.relativeLayoutConverter(itemY,CONTENT_HEIGHT,ih,imargin);										newY = yHolder + ypad ;					yHolder = newY + ih;// + ypad;				} else if (syncType == 'buildx'){					newX = xHolder  + xpad;					newY  = (!isNaN(Number(itemY)))?Number(itemY):SimpleUtils.relativeLayoutConverter(itemY,CONTENT_HEIGHT,ih,imargin);					xHolder = newX + iw;// + xpad;				} else if (syncType == 'replace'){					newX = (!isNaN(Number(itemX)))?Number(itemX):SimpleUtils.relativeLayoutConverter(itemX,CONTENT_WIDTH,iw,imargin,_layoutModifier);					newY  = (!isNaN(Number(itemY)))?Number(itemY):SimpleUtils.relativeLayoutConverter(itemY,CONTENT_HEIGHT,ih,imargin);				} else {					var ix:String = (item.hasOwnProperty("@x")) ? item.@x : groupX;					var iy:String = (item.hasOwnProperty("@y")) ? item.@y : groupY;					newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,iw,imargin,_layoutModifier);					newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,ih,imargin);				}				img.x = newX;				img.y = newY;								var bui:BodyUI;				if (isIcon){					//if icon then it may have transparent background or diff style					bui = img as BodyUI;				} else {					bui = img as BodyUI;				//	bui = _addStyle(img,iw,ih);				}												if (syncType == 'overlay'){					//bui.alpha = 0;					_slideContent.addChild(bui);				} else {					_slideContent.addChildAt(bui,0);				}								_slideItems.push(bui);			}		}						private function _frameTrigger(param1:String,param2:String,param3:BodyUI):void		{			var bdyAnim:BodyAnim = param3 as BodyAnim;			if (param1 == 'gotoplay'){				bdyAnim.gotoAndPlayFramelabel(param2);				//	trace('gotoAndPlay =' + param2);			} else {				bdyAnim.gotoAndStopFramelabel(param2);			}					}				private function _createSlideHeader(uinode:XML):void		{					var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";			var margin:Number = (uinode.hasOwnProperty("@margin"))?uinode.@margin:0;						//var syncType:String = (uinode.hasOwnProperty("@syncType"))?uinode.@syncType:"buildy";			//FONT_NAME			var fontname:String = (uinode.hasOwnProperty("@fontName"))?uinode.@fontName:FONT_NAME;						var fontsize:Number = (uinode.hasOwnProperty("@fontSize"))?uinode.@fontSize:18;			var fontcolor:String = (uinode.hasOwnProperty("@fontColor"))?uinode.@fontColor:"black";			var fontstyle:String =(uinode.hasOwnProperty("@fontStyle"))?uinode.@fontStyle:"reg";			var fontalign:String =(uinode.hasOwnProperty("@fontAlign"))?uinode.@fontAlign:"left";						var uxpad:Number = (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number = (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;						var uW:Number = (uinode.hasOwnProperty("@width"))?uinode.@width:CONTENT_WIDTH;			var uH:Number = (uinode.hasOwnProperty("@height"))?uinode.@height:CONTENT_HEIGHT;						//var holderX:Number = uX;			//var holderY:Number = uY;									var holderX:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin, _layoutModifier);			var holderY:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var uip:UIparams = new UIparams();			uip.uiFontColor = fontcolor;			uip.uiFontSize = fontsize;			uip.uiFontStyle = fontstyle;			uip.uiFontHAlign = fontalign;			uip.uiFillColor = (uinode.hasOwnProperty("@fillColor"))?uinode.@fillColor:"white";						uip.uiPadding = margin;			uip.uiFillAlpha=(uinode.hasOwnProperty("@fillAlpha"))?uinode.@fillAlpha:0;			uip.uiWidth= (uinode.hasOwnProperty("@width"))?uinode.@width:CONTENT_WIDTH;			uip.uiHeight=(uinode.hasOwnProperty("@height"))?uinode.@height:0;			var iTrans:String = uinode.@trans;			var iEase:String = uinode.@ease;						var shxml:XMLList = uinode.*;						for each (var item:XML in shxml) 			{ 				var sHeader:BodyHeader1 = new BodyHeader1();								//	var sHeader:BodyHeader = new BodyHeader();				var headtext:String = item;				uip.uiPadX = uxpad;				uip.uiPadY = uypad;				var ordernum:int = int(item.@order);				sHeader.addHeader(headtext,uip,FONT_NAME, _languageID);				//	sHeader.addHeader(headtext,false,SHELL_COLORS.CLR_WHITE,iW);			//	sHeader.timeIn =   item.@timeIn;			//	sHeader.timeOut = item.@timeOut;				sHeader.time =  item.@time;				sHeader.name = item.@id;				sHeader.trans = iTrans;				sHeader.ease = iEase;				sHeader.layoutModifier = _layoutModifier;								sHeader.order = ordernum;								var iX:String =(item.hasOwnProperty("@x"))?item.@x:groupX;				var iY:String  =(item.hasOwnProperty("@y"))?item.@y:groupY;				var iW:Number;// = (item.hasOwnProperty("@width"))?item.@width:uW;				var iH:Number;							if (item.hasOwnProperty("@width")){					iW = item.@width;				} else {					iW = (sHeader.width < uW)?sHeader.width:uW;									}								if (item.hasOwnProperty("@height")){					iH = item.@height;				} else {					iH = (sHeader.height < uH)?sHeader.height:uH;									}								var newX:Number = (!isNaN(Number(iX)))?Number(iX):SimpleUtils.relativeLayoutConverter(iX,CONTENT_WIDTH,iW,margin, _layoutModifier);				var newY:Number = (!isNaN(Number(iY)))?Number(iY):SimpleUtils.relativeLayoutConverter(iY,CONTENT_HEIGHT,iH,margin);								sHeader.x = newX;// sceneHeader.@x;				sHeader.y = newY; //sceneHeader.@y;								trace('+++++++++++++++++++++++++++++++ sheader = newX' + newX + ' newY=' +newY + ' iW= ' + iW + ' iH='+ iH + ' trans=' +sHeader.trans );				_slideContent.addChild(sHeader);				_slideItems.push(sHeader);				//	_slideItems.push({ordernum, sHeader});			}					}				/*		private function _createActivityUI(uinode:XML):BodyUI		{						var actbdy:BodyUI = new BodyUI();									var iID:String = uinode.@uid;						var iType:String = uinode.@type;			var iTrans:String = uinode.@trans;			var iEase:String = uinode.@ease;			var aType:String = uinode.@atype;			var ordernum:int = int(uinode.@order);			var iTime:Number = uinode.@time;									var uW:Number = (uinode.hasOwnProperty("@width"))?uinode.@width:CONTENT_WIDTH;			var uH:Number = (uinode.hasOwnProperty("@height"))?uinode.@height:CONTENT_HEIGHT;			var margin:Number =  (uinode.hasOwnProperty("@margin"))?uinode.@margin:20;			var iX:Number = uinode.@x;// + margin;			var iY:Number = uinode.@y;// + margin;			var iW:Number;			var iH:Number;						actbdy.graphics.lineStyle(4,0x666666,1);			actbdy.graphics.drawRect(iX,iY,uW,uH);								//trace("aType = " + aType);			//	trace("uinodexml=  " + uinode.toString());			switch (aType) {				//case 'dd2row':								case 'match':					var actmatch:ACT_match = new ACT_match();					actmatch.name = aType;					actmatch.x = iX;					actmatch.y = iY;					iW = uW - (iX*2);					iH = uH - (iY);					actmatch.buildActivity(iW,iH,aType,uinode,_shell_dir);					actmatch.id = iID;					actmatch.order = ordernum;					actmatch.time = iTime;										actmatch.trans = iTrans;					actmatch.ease = iEase;					actmatch.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);					actbdy = actmatch as BodyUI;				//	_slideContent.addChild(actmatch);				//	_slideItems.push(actmatch);					break;				case 'click2reveal':					_slideStartDelay = 2;										var actc2r:ACT_click2reveal = new ACT_click2reveal();					actc2r.name = aType;					actc2r.x = iX;					actc2r.y = iY;										iW = uW - (iX*2);					iH = uH - (iY);					actc2r.buildActivity(iW,iH,aType,uinode,_shell_dir);					actc2r.id = iID;					actc2r.order = ordernum;					actc2r.time = iTime;					actc2r.trans = iTrans;					actc2r.ease = iEase;					actc2r.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);										actbdy = actc2r as BodyUI;					//_slideContent.addChild(actc2r);				//	_slideItems.push(actc2r);					break;				case 'dd1col':					var actdd1:ACT_dragDrop = new ACT_dragDrop();					actdd1.name = aType;					actdd1.x = iX;					actdd1.y = iY;					iW = uW;// - (iX*2);					iH = uH;// - (iY);					trace('iW and iH = ' + iW + 'ioio' + iH);					actdd1.buildActivity(iW,iH,aType,uinode,_shell_dir);					actdd1.id = iID;					actdd1.order = ordernum;					actdd1.time = iTime;					actdd1.trans = iTrans;					actdd1.ease = iEase;					actdd1.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);					actbdy = actdd1 as BodyUI;					this.addChild(actdd1);					_slideContent.addChild(actdd1);					_slideItems.push(actdd1);					trace('actype=' + aType);					break;				case 'mc':					var actmc:ACT_multipleChoice = new ACT_multipleChoice();					actmc.name = aType;					actmc.x = iX;					actmc.y = iY;					iW = uW - (iX*2);					iH = uH - (iY);							actmc.buildActivity(iW,iH,aType,uinode,_shell_dir);					actmc.id = iID;					actmc.order = ordernum;					actmc.time = iTime;					actmc.trans = iTrans;					actmc.ease = iEase;					actmc.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);					actbdy = actmc as BodyUI;				//	_slideContent.addChild(actmc);				//	_slideItems.push(actmc);					break;				case 'tai':					var acttai:ACT_textAreaInput = new ACT_textAreaInput();					acttai.name = 'textareainput';					acttai.x = iX;					acttai.y = iY;					iW = uW - (iX*2);					iH = uH - (iY);					acttai.buildActivity(aType,uinode,_shell_dir,iW, iH);					acttai.id = iID;					acttai.order = ordernum;					acttai.time = iTime;					acttai.trans = iTrans;					acttai.ease = iEase;					acttai.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);				//	_slideContent.addChild(acttai);				//	_slideItems.push(acttai);					_hasPrintView = true;					_printuiname = acttai.name;										actbdy = acttai as BodyUI;					break;				case 'dragrate':					var actdrate:ACT_dragRate = new ACT_dragRate();					actdrate.name = 'dragrate';					actdrate.x = iX;					actdrate.y = iY;					iW = uW - (iX*2);					iH = uH - (iY);					actdrate.buildActivity(aType,uinode,_shell_dir,iW, iH);					actdrate.id = iID;					actdrate.order = ordernum;					actdrate.time = iTime;					actdrate.trans = iTrans;					actdrate.ease = iEase;					actdrate.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);					_slideContent.addChild(actdrate);					_slideItems.push(actdrate);					_hasPrintView = true;					_printuiname = actdrate.name;										actbdy = actdrate as BodyUI;					break;							}				return actbdy;		}						*/								private function _createActivity(uinode:XML):Boolean		{			var hsAct:Boolean = true;			var uID:String = uinode.@uid;						var uType:String = uinode.@type;			var uTrans:String = uinode.@trans;			var uEase:String = uinode.@ease;			var aType:String = uinode.@atype;			var ordernum:int = int(uinode.@order);			var uTime:Number = uinode.@time;						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";									var uX:Number = (isNaN(Number(groupX)))?0:Number(groupX);			var uY:Number = (isNaN(Number(groupY)))?0:Number(groupY);												var uW:Number = (uinode.hasOwnProperty("@width"))?uinode.@width:CONTENT_WIDTH;			var uH:Number = (uinode.hasOwnProperty("@height"))?uinode.@height:CONTENT_HEIGHT;									var uMargin:Number =  (uinode.hasOwnProperty("@margin"))?uinode.@margin:0;			trace('uMargin='+ uMargin);														//	var uX:Number =  uinode.@x;// +uMargin;		//	var uY:Number = uinode.@y;// + uMargin;					var xMarginLeft:Number = uX + uMargin;			var xMargin:Number =  (2*uX) + (2*uMargin);			trace('xMargin='+xMargin);			var yMargin:Number =  uY + 10;						var iW:Number = uW - xMargin;						var iH:Number = uH - yMargin;;// int(uH);// - (uY));			trace("aType = " + aType + "iW="+iW + "  iH="+ iH + "uX=" +uX + "uY="+ uY );			var newW:Number = CONTENT_WIDTH - (2*uMargin);			var newH:Number = CONTENT_HEIGHT - (uMargin);			var newX:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,newW,uMargin);			var newY:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,newH,uMargin);						switch (aType) {				case 'dd2row':								case 'dd1col':					var actdd1:ACT_dragDrop = new ACT_dragDrop();					actdd1.buildActivity(iW,iH,aType,uinode,_shell_dir,FONT_NAME,_languageID);					actdd1.name = aType;					actdd1.id = uID;					actdd1.order = ordernum;					actdd1.time = uTime;					actdd1.trans = uTrans;					actdd1.ease = uEase;					actdd1.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);				//	actBodyUI = actdd1 as BodyUI;					actdd1.x = xMarginLeft;					actdd1.y = uY;					_slideContent.addChild(actdd1);					_slideItems.push(actdd1);					break;				case 'match':					var actmatch:ACT_match = new ACT_match();					actmatch.buildActivity(newW,newH,aType,uinode,_shell_dir,FONT_NAME,_languageID);									//	actmatch.buildActivity(iW,iH,aType,uinode,_shell_dir,FONT_NAME,_langaugeID);					actmatch.id = uID;					actmatch.order = ordernum;					actmatch.time = uTime;					actmatch.trans = uTrans;					actmatch.ease = uEase;					actmatch.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);					actmatch.x = newX;					actmatch.y = newY;					_slideContent.addChild(actmatch);					_slideItems.push(actmatch);					break;				case 'click2reveal':					_slideStartDelay = 2;										var actc2r:ACT_click2reveal = new ACT_click2reveal();					actc2r.buildActivity(iW,iH,aType,uinode,_shell_dir,FONT_NAME,_languageID);					actc2r.id = uID;					actc2r.order = ordernum;					actc2r.time = uTime;					actc2r.trans = uTrans;					actc2r.ease = uEase;					actc2r.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);					actc2r.x = xMarginLeft;					actc2r.y = uY					_slideContent.addChild(actc2r);					_slideItems.push(actc2r);					break;				case 'mc':					var actmc:ACT_multipleChoice = new ACT_multipleChoice();						actmc.buildActivity(newW,newH,aType,uinode,_shell_dir,_sceneTextObject,FONT_NAME,_languageID);										actmc.id = uID;					actmc.order = ordernum;					actmc.time = uTime;					actmc.trans = uTrans;					actmc.ease = uEase;					actmc.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);					actmc.x = newX;					actmc.y = newY;					_slideContent.addChild(actmc);					_slideItems.push(actmc);					break;				case 'tai':					var acttai:ACT_textAreaInput = new ACT_textAreaInput();					acttai.buildActivity(aType,uinode,_shell_dir,newW, newH,FONT_NAME,_languageID);					acttai.name = 'textareainput';					acttai.id = uID;					acttai.order = ordernum;					acttai.time = uTime;					acttai.trans = uTrans;					acttai.ease = uEase;					acttai.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);										acttai.x = newX;					acttai.y = newY;										_slideContent.addChild(acttai);					_slideItems.push(acttai);					_hasPrintView = true;					_printuiname = acttai.name;					break;				case 'dragrate':					var actdrate:ACT_dragRate = new ACT_dragRate();					actdrate.buildActivity(aType,uinode,_shell_dir,newW,newH,FONT_NAME,_languageID);					actdrate.name = 'dragrate';					actdrate.id = uID;					actdrate.order = ordernum;					actdrate.time = uTime;					actdrate.trans = uTrans;					actdrate.ease = uEase;					actdrate.addEventListener(ShellEvent.ACT_EVENT,_actevent_handler);										actdrate.x = newX;					actdrate.y = newY;										_slideContent.addChild(actdrate);					_slideItems.push(actdrate);					_hasPrintView = true;					_printuiname = actdrate.name;					break;				default:					hsAct = false;							}						return hsAct;			//return actBodyUI;		}					private function _createBodyImageCascade(uinode:XML):void		{						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var uW:Number = uinode.@width;			var uH:Number = uinode.@height;									var margin:Number = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : 0;									var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin,_layoutModifier);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);								var iTrans:String = uinode.@trans;						var iEase:String = uinode.@ease;			//var uID:String = uinode.@uid;						var uorder:Number = uinode.@order;			var utime:Number = uinode.@time;						var mediapath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA;			var imgXML:XMLList = uinode.*;			trace('bodyImageCascade=> ' + imgXML.toString());			var bic:BodyImageCascade = new BodyImageCascade();						bic.init(uW,uH,mediapath,imgXML);			bic.id =  uinode.@uid;			bic.name =  uinode.@uid;			bic.order = uorder;			bic.time = utime;			bic.x = xHolder;			bic.y = yHolder;			//bodymc.frameLabel = iFrameStart;			_slideContent.addChild(bic as BodyUI);					}				//_createCoverFlowText		private function _createCoverFlow_text(uinode:XML):void		{						var uW:Number = (uinode.hasOwnProperty("@width")) ? uinode.@width : _timelineParams.uiWidth;			var uH:Number =   (uinode.hasOwnProperty("@height")) ? uinode.@height : _timelineParams.uiHeight;			var groupX:String = (uinode.hasOwnProperty("@x")) ? uinode.@x : _timelineParams.uiXloc;			var groupY:String = (uinode.hasOwnProperty("@y")) ? uinode.@y : _timelineParams.uiYloc;			var iX:Number =  (uinode.hasOwnProperty("@x")) ? uinode.@x : _timelineParams.uiX;			var iY:Number = (uinode.hasOwnProperty("@y")) ? uinode.@y : _timelineParams.uiY;						var uMargin:Number = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : _timelineParams.uiMargin;						/*			var iW:Number =  (uinode.hasOwnProperty("@width")) ? uinode.@width : _timelineParams.uiWidth;			var iH:Number =  (uinode.hasOwnProperty("@height")) ? uinode.@height : _timelineParams.uiHeight;			var iX:Number =  (uinode.hasOwnProperty("@x")) ? uinode.@x : _timelineParams.uiX;			var iY:Number = (uinode.hasOwnProperty("@y")) ? uinode.@y : _timelineParams.uiY;						var iPadding:Number = (uinode.hasOwnProperty("@padding")) ? uinode.@padding : _timelineParams.uiPadding;			*/						var iTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : _timelineParams.uiTrans;			var iEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : _timelineParams.uiEase;			var iEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : _timelineParams.uiEffect;			var iTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : _timelineParams.uiTime;			var fontsize:Number = (uinode.hasOwnProperty("@fontSize")) ? uinode.@fontSize : _timelineParams.uiFontSize;			var fontcolor:String = (uinode.hasOwnProperty("@fontColor")) ? uinode.@fontColor : _timelineParams.uiFontColor;			var fontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle : _timelineParams.uiFontStyle;//.DEFAULT_FONTSTYLE;			var fontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign :_timelineParams.uiFontHAlign;// SHELL_VARS.DEFAULT_FONTALIGN;			var formattype:String = (uinode.hasOwnProperty("@formatType")) ? uinode.@formatType :_timelineParams.uiFormatType;// SHELL_VARS.DEFAULT_FONTALIGN;			var usynctype:String =(uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"buildy";			var upadx:Number = (uinode.hasOwnProperty("@xPad")) ? uinode.@xPad : _timelineParams.uiPadX;			var upady:Number = (uinode.hasOwnProperty("@yPad")) ? uinode.@yPad : _timelineParams.uiPadY;						var xHolder:Number = iX;			var yHolder:Number = iY;			var ui_height:Number;			var bulletXML:XMLList = uinode.*;			for each (var bodyBullet:XML in bulletXML) 			{ 				var bid:String = bodyBullet.@id;				var ord:int = bodyBullet.@order;				var btime:Number =  (bodyBullet.hasOwnProperty("@time")) ? bodyBullet.@time : iTime;								var bw:Number = (bodyBullet.hasOwnProperty("@width")) ? bodyBullet.@width : uW;				var bh:Number = (bodyBullet.hasOwnProperty("@height")) ? bodyBullet.@height : uH;								var bx:String = (bodyBullet.hasOwnProperty("@x")) ? bodyBullet.@x : groupX;				var by:String = (bodyBullet.hasOwnProperty("@y")) ? bodyBullet.@y : groupY;								//var synctype:String =(bodyBullet.hasOwnProperty("@syncType")) ? bodyBullet.@syncType : "buildy";								var tIN:Number = (bodyBullet.hasOwnProperty("@timeIn")) ? bodyBullet.@timeIn : 0;				var tOUT:Number = (bodyBullet.hasOwnProperty("@timeOut")) ? bodyBullet.@timeOut : 999;								var fsize:Number = (bodyBullet.hasOwnProperty("@fontSize")) ? bodyBullet.@fontSize :fontsize;				var fcolor:String = (bodyBullet.hasOwnProperty("@fontColor")) ? bodyBullet.@fontColor : fontcolor;				var falign:String = (bodyBullet.hasOwnProperty("@fontAlign")) ? bodyBullet.@fontAlign :fontalign;				var fstyle:String = (bodyBullet.hasOwnProperty("@fontStyle")) ? bodyBullet.@fontStyle : fontstyle;				var fmtype:String = (bodyBullet.hasOwnProperty("@formatType")) ? bodyBullet.@formatType : formattype;				var bullettxt:String = bodyBullet;												var btrans:String = (bodyBullet.hasOwnProperty("@trans")) ? bodyBullet.@trans : iTrans;				var bease:String = (bodyBullet.hasOwnProperty("@ease")) ? bodyBullet.@ease : iEase;								//var bullettxt:String = bodyBullet;												var bb1:BodyText = new BodyText();				bb1.init(bodyBullet,bw,bh,fmtype,fsize,fcolor,falign,fstyle,uMargin,FONT_NAME,_languageID);												//bb1.init(bodyBullet,bw,formattype,fontsize,fontcolor,FONT_NAME,_languageID);				bb1.name = bodyBullet.@id;				bb1.id =bodyBullet.@id;				bb1.order = ord;				bb1.time = (bodyBullet.hasOwnProperty("@time"))?bodyBullet.@time:iTime;								bb1.timeIn = bodyBullet.@timeIn;				bb1.timeOut = bodyBullet.@timeOut;												bb1.trans = (bodyBullet.hasOwnProperty("@trans"))?bodyBullet.@trans:iTrans;				bb1.ease = (bodyBullet.hasOwnProperty("@ease"))?bodyBullet.@ease:iEase;								if (bodyBullet.hasOwnProperty("@target")) {					bb1.target = bodyBullet.@target;					bb1.targetTrigger = bodyBullet.@targetTrigger;					bb1.targetParams = bodyBullet.@targetParams;				} 								ui_height = int(bb1.uiHeight);			trace("uiui_height======== "+ ui_height);						var xpad:Number = (bodyBullet.hasOwnProperty("@xPad")) ? bodyBullet.@xPad :upadx;			var ypad:Number = (bodyBullet.hasOwnProperty("@yPad")) ? bodyBullet.@yPad :upady;			var newX:Number;			var newY:Number;						if (usynctype == 'buildy'){				newX  = (!isNaN(Number(bx)))?Number(bx):SimpleUtils.relativeLayoutConverter(bx,CONTENT_WIDTH,bw,uMargin);				//var yadj:Number =  (!isNaN(Number(by)))?Number(by):SimpleUtils.relativeLayoutConverter(bx,CONTENT_WIDTH,bw,uMargin);				newY = yHolder + ypad;				yHolder = newY + ui_height;// int(bb1.height);			} else if (usynctype == 'replace'){				newX = (!isNaN(Number(bx)))?Number(bx):SimpleUtils.relativeLayoutConverter(bx,CONTENT_WIDTH,bw,xpad);				newY = (!isNaN(Number(by)))?Number(by):SimpleUtils.relativeLayoutConverter(by,CONTENT_HEIGHT,ui_height,ypad);							} else	{							newX = (!isNaN(Number(bx)))?Number(bx):SimpleUtils.relativeLayoutConverter(bx,CONTENT_WIDTH,bw,xpad);				newY = (!isNaN(Number(by)))?Number(by):SimpleUtils.relativeLayoutConverter(by,CONTENT_HEIGHT,ui_height,ypad);				//newX = bodyBullet.@x;			//	newY =  bodyBullet.@y ;			//	var ix:NUmber = (item.hasOwnProperty("@x")) ? bodyBullet.@x : iX;				//var iy:String = (item.hasOwnProperty("@y")) ? bodyBullet.@y : iY;				//newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,iw,xpad);			//	newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,ih,ypad);				//newX = (!isNaN(Number(ix)))?Number(ix):_relativeLayoutConverter(ix,iw,uPadding);				//newY = (!isNaN(Number(iy)))?Number(iy):_relativeLayoutConverter(iy,ih,uPadding);			}						bb1.x = newX;			bb1.y = newY;			_slideContent.addChild(bb1);						_slideItems.push(bb1);			}					}				//Welcome to Chrysler mod2200		//_createImageCoverFlow		private function _createCoverFlow_bodyImage(uinode:XML):void		{						_coverFlowImages = new Array();						var uW:Number = uinode.@width;			var uH:Number = uinode.@height;			var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";									var uMargin:Number = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : 0;						var uX:Number = (!isNaN(Number(groupX)))?Number(groupX):_relativeLayoutConverter(groupX,uW,uMargin);			var uY:Number = (!isNaN(Number(groupY)))?Number(groupY):_relativeLayoutConverter(groupY,uH,uMargin);								//	_coverFlowContainer = new Sprite();			var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : _bodyImageXML.@time;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : _bodyImageXML.@trans;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : _bodyImageXML.@ease;			var uStyle:String = (uinode.hasOwnProperty("@style")) ? uinode.@style : _bodyImageXML.@style;			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : _bodyImageXML.@effect;						var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode :_bodyImageXML.@scaleMode;// "width";//SHELL_VARS.DEFAULT_SCALEMODE;			var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor :_bodyImageXML.@scaleFactor;								//var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			//var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			//var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;		//	var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : SHELL_VARS.DEFAULT_TIME;		//	var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode : SHELL_VARS.DEFAULT_SCALEMODE;		//	var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor : SHELL_VARS.DEFAULT_SCALEFACTOR;			var uSyncType:String =(uinode.hasOwnProperty("@syncType")) ? uinode.@syncType : "buildx";			var uxpad:Number =(uinode.hasOwnProperty("@xPad")) ? uinode.@xPad : 0;			var uCenterIt:Boolean = (uinode.hasOwnProperty("@centerIt"))? true :false;			//var fontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle : SHELL_VARS.DEFAULT_FONTSTYLE;			//	var fontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : SHELL_VARS.DEFAULT_FONTALIGN;						var xHolder:Number = uX;			var yHolder:Number = uY;						var itemXML:XMLList = uinode.*;			for each (var item:XML in itemXML) 			{ 				var iid:String = item.@id;				var iorder:int = item.@order;				var itime:Number =  (item.hasOwnProperty("@time")) ? item.@time : uTime;								var iw:Number = (item.hasOwnProperty("@width")) ? item.@width : uW;				var ih:Number = (item.hasOwnProperty("@height")) ? item.@height : uH;								var itemx:String = (item.hasOwnProperty("@x")) ? item.@x : groupX;				var itemy:String = (item.hasOwnProperty("@y")) ? item.@y : groupY;								var ix:Number = (!isNaN(Number(itemx)))?Number(itemx):_relativeLayoutConverter(itemx,uW,uMargin);				var iy:Number = (!isNaN(Number(itemy)))?Number(itemy):_relativeLayoutConverter(itemy,uH,uMargin);												var synctype:String =(item.hasOwnProperty("@syncType")) ? item.@syncType : uSyncType;								var tIN:Number = (item.hasOwnProperty("@timeIn")) ? item.@timeIn : 0;				var tOUT:Number = (item.hasOwnProperty("@timeOut")) ? item.@timeOut : 999;								//var iFstyle:String = (item.hasOwnProperty("@fontStyle")) ? item.@fontStyle : fontstyle;				//var itext:String = item;												var itrans:String = (item.hasOwnProperty("@trans")) ? item.@trans :uTrans;				var iease:String = (item.hasOwnProperty("@ease")) ? item.@ease : uEase;				var istyle:String = (item.hasOwnProperty("@style")) ? item.@ease : uStyle;				var ieffect:String = (item.hasOwnProperty("@effect")) ? item.@effect :uEffect;				var itempath:String = item.@url;				var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + itempath;				var icenter:Boolean = (item.hasOwnProperty("@centerIt")) ? true :uCenterIt;								var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :uxpad;												//var img:* ;				var centerImg:Boolean = false;								var img:BodyImage = new BodyImage();				img.init(fullpath,uScaleMode,uScaleFactor,iw,ih,istyle,ieffect,icenter);				/*				img = new BodyImage_CoverFlow();				img.init(fullpath,uScaleMode,uScaleFactor,iw,ih,ieffect,icenter);				*/				img.id = iid;				img.order = iorder;				//var img:ASBodyImage = new ASBodyImage();				//img.init(fullpath,uScaleMode,uScaleFactor,iw,ih,ieffect);				img.trans = itrans;				img.ease = iease;				img.syncType = synctype;								img.timeIn = tIN;				img.timeOut = tOUT;				img.time = itime;								var newX:Number;				var newY:Number;								if (synctype == 'buildx') {										newX = xHolder;					trace("img id="+ img.id + 'newX=' + newX);					newY = iy;					xHolder = xHolder + iw + xpad;;				} else {					newX = ix;					newY = iy;				}								trace("%%%%%%%%%%%%%%" + "syncType" + synctype + " newX= " + newX);				/*				if (synctype == 'add') {					newX = xHolder;					xHolder = xHolder + iw;				}				*/								img.x = newX;				img.y = newY;								_slideContent.addChildAt(img,0);				_coverFlowImages.push(img);				_slideItems.push(img);							}					}					private function _createWidgetHeader(uinode:XML):void		{									var uip:UIparams = new UIparams();			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number = (uinode.hasOwnProperty("@margin"))?uinode.@margin:0;						var ufontsize:Number = (uinode.hasOwnProperty("@fontSize")) ? uinode.@fontSize : _sceneTextObject.box_fontSize;// SHELL_VARS.DEFAULT_FONTSIZE;			var ufontcolor:String = (uinode.hasOwnProperty("@fontColor")) ? uinode.@fontColor :_sceneTextObject.box_fontColor;//  SHELL_VARS.DEFAULT_FONTCOLOR;			var ufontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle :_sceneTextObject.box_fontStyle;// SHELL_VARS.DEFAULT_FONTSTYLE;			//var ufontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : "center";//SHELL_VARS.DEFAULT_FONTALIGN;						//	var ufontsize:Number= (uinode.hasOwnProperty("@fontSize"))?uinode.@fontSize:16;			//	var ufontcolor:String= (uinode.hasOwnProperty("@fontColor"))?uinode.@fontColor:"default";			var uformattype:String = (uinode.hasOwnProperty("@formatType"))?uinode.@formatType:"normal";						uip.uiFontSize = ufontsize;			uip.uiFontColor = ufontcolor;			uip.uiFontHAlign = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign :"center";			uip.uiFontStyle =  ufontstyle;//SHELL_VARS.DEFAULT_FONTSTYLE;						uip.uiFillAlpha = (uinode.hasOwnProperty("@fillAlpha"))?uinode.@fillAlpha:1;			uip.uiFillColor = (uinode.hasOwnProperty("@fillColor"))?uinode.@fillColor:"0x003366";			uip.uiFrameSize = (uinode.hasOwnProperty("@frameSize"))?uinode.@frameSize:1;			uip.uiFrameAlpha =(uinode.hasOwnProperty("@frameAlpha"))? uinode.@frameAlpha:1;			uip.uiFrameColor = (uinode.hasOwnProperty("@frameColor"))?uinode.@frameColor:"0x003366";								var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;			var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : SHELL_VARS.DEFAULT_TIME;						var uCenterIt:Boolean = (uinode.hasOwnProperty("@centerIt"))? true :false;			//var fontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle : SHELL_VARS.DEFAULT_FONTSTYLE;			//	var fontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : SHELL_VARS.DEFAULT_FONTALIGN;															var holderX:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin);			var holderY:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);												//var graphicpath:String = uinode.@url;						var itemXML:XMLList = uinode.*;			for each (var item:XML in itemXML) 			{ 				var iid:String = item.@id;				var iorder:int = item.@order;				var itime:Number =  (item.hasOwnProperty("@time")) ? item.@time : uTime;								uip.uiWidth = (item.hasOwnProperty("@width")) ? item.@width : uW;				uip.uiHeight = (item.hasOwnProperty("@height")) ? item.@height : uH;								var ix:Number = (item.hasOwnProperty("@x")) ? item.@x : holderX;				var iy:Number = (item.hasOwnProperty("@y")) ? item.@y : holderY;				var padx:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad : 0;				var pady:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad : 0;				uip.uiPadX = padx				uip.uiPadY = pady;				//uip.uiPadding = (item.hasOwnProperty("@padding")) ? item.@padding : uPadding;								var synctype:String =(item.hasOwnProperty("@syncType")) ? item.@syncType : "replace";								var tIN:Number = (item.hasOwnProperty("@timeIn")) ? item.@timeIn : 0;				var tOUT:Number = (item.hasOwnProperty("@timeOut")) ? item.@timeOut : 999;								//var iFstyle:String = (item.hasOwnProperty("@fontStyle")) ? item.@fontStyle : fontstyle;				//var itext:String = item;								uip.uiTrans =   (item.hasOwnProperty("@trans")) ? item.@trans :uTrans;				uip.uiEase  = (item.hasOwnProperty("@ease")) ? item.@ease : uEase;				uip.uiEffect = (item.hasOwnProperty("@effect")) ? item.@effect :uEffect;								var icenter:Boolean = (item.hasOwnProperty("@centerIt")) ? true :uCenterIt;								var centerImg:Boolean = false;				var header:C2R_HeaderItem = new C2R_HeaderItem();																//var fullpath:String = _shell_dir+"graphics/"+graphicpath;				var headertext:String = item;								header.init(headertext,uip,FONT_NAME, _languageID);								header.trans = uip.uiTrans;				header.ease = uip.uiEase;								header.syncType = synctype;								header.timeIn = tIN;				header.timeOut = tOUT;				header.time = itime;								header.x =ix;				header.y = iy;								_slideContent.addChildAt(header,0);								_slideItems.push(header);							}					}		private function _create_c2rMapIcon(uinode:XML):void		{						var uip:UIparams = new UIparams();			uip.uiWidth =uinode.@width;			uip.uiHeight =uinode.@height;			var utype:String =  uinode.@type; 						var iTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans :  SHELL_VARS.DEFAULT_TRANS;			var iEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease :  SHELL_VARS.DEFAULT_EASE;			var iEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect :  SHELL_VARS.DEFAULT_EFFECT;			var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time :  1;						uip.uiFontColor = uinode.@fontColor;			uip.uiFontSize = uinode.@fontSize;			uip.uiFontColor2 = uinode.@fontColor2;			uip.uiFontHAlign = (uinode.hasOwnProperty("@fontAlign"))?uinode.@fontAlign: "center";			uip.uiPadding =  (uinode.hasOwnProperty("@padding"))?uinode.@padding: 0;						var uiassetfolder:String = uinode.@assetPath;						var btnpath:String = uiassetfolder+"btn_normal.png";			var pointerpath:String = uiassetfolder+"pointer.png";		//	var pointerpath:String = uinode.@pointerPath;			//var btnpath:String = uinode.@btnPath;						var mapiconXML:XMLList = uinode.*; 			for each (var item:XML in mapiconXML) {				var mapicon:MapIcon = new MapIcon();				var mipath:String = (item.hasOwnProperty("@icon"))? item.@icon:"no";				var hasIcon:Boolean = (mipath == "no")? false:true;				var fullpath:String = _shell_dir+SHELL_VARS.FOLDER_MEDIA;				var lbl:String = item.label;								if (hasIcon) {					var iconpath:String = item.@icon;					//mapicon.build(lbl,uip,fullpath,btnpath,FONT_NAME,_languageID,iconpath);								mapicon.build(lbl,uip,fullpath,btnpath,FONT_NAME,_languageID,iconpath,pointerpath);									} else {					mapicon.build(lbl,uip,fullpath,btnpath,FONT_NAME,_languageID);									}								mapicon.type = utype;				/*				if (item.trigers.length() > 0) {				trace(item.triggers.trig[0]);				} else {				trace("length");				}				*/				if (item.triggers != undefined) {					mapicon.triggers = item.triggers;//.trig;				} else {					//		trace("no triggers undefined");				}				var synctype:String =(item.hasOwnProperty("@syncType")) ? item.@syncType : "replace";				var itime:Number = (item.hasOwnProperty("@time")) ? item.@time :  uTime;				var tIN:Number = (item.hasOwnProperty("@timeIn")) ? item.@timeIn : 0;				var tOUT:Number = (item.hasOwnProperty("@timeOut")) ? item.@timeOut : 999;								mapicon.id = item.@id;				mapicon.time = itime;				mapicon.timeIn = tIN;				mapicon.timeOut = tOUT;				mapicon.trans = iTrans;				mapicon.ease = iEase;								mapicon.x = item.@x;				mapicon.y = item.@y;												_slideContent.addChild(mapicon);								_slideItems.push(mapicon);							}					}		private function _createBodyAnimSWF(uinode:XML, forScene:Boolean = false):void		{				var uW:Number = uinode.@width;				var uH:Number = uinode.@height;				var uX:Number = uinode.@x;				var uY:Number = uinode.@y;				/* uid="1" type="bodyAnim" x="0" y="0" padding="0" 				width="755" 				height="583" 				effect="none" 				scaleMode="none" 				trans="none" 				ease="none" 				sfile="3105_anim.swf">				<trigger id="arrow1" timeIn="1.24" />				<trigger id="arrow2" timeIn="4.16" />				<trigger id="arrow3" timeIn="10.21" />				<trigger id="arrow4" timeIn="20.09" />				</ui>								*/				var uType:String = uinode.@type;				var uTrans:String = uinode.@trans;				var uEase:String = uinode.@ease;				var uPadding:Number = 0;				var uEffect:String = uinode.@effect;								var sfile:String = uinode.@url;				var uPath:String = _shell_dir+ SHELL_VARS.FOLDER_MEDIA + sfile;				var bodyAnim:BodyAnim = new BodyAnim();				bodyAnim.init(uPath,uW,uH);								bodyAnim.triggers = uinode.*;				bodyAnim.trans = uTrans;				bodyAnim.ease = uEase;				bodyAnim.x = uX;				bodyAnim.y = uY;				_slideContent.addChild(bodyAnim);				_slideItems.push(bodyAnim);		}				private function _createBodyAnim(uinode:XML, forScene:Boolean = false):void		{						trace("_createBodyAnim");			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : 0;						var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin,_layoutModifier);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);			var uOrder:Number = (uinode.hasOwnProperty("@order")) ? uinode.@order : 1;			var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : 1;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : 'animbuild';			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;					var sFile:String = (uinode.hasOwnProperty("@url")) ? uinode.@url : 'none';			var frameStart:String = (uinode.hasOwnProperty("@frameStart")) ? uinode.@frameStart : 'start';						//var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode : "width";//SHELL_VARS.DEFAULT_SCALEMODE;			var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor : 1;						var uSyncType:String = (uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"append";						var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;									var bUI:BodyAnimSWF = new BodyAnimSWF();			bUI.type = 'bodyanimswf';			var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + sFile;			var ordernum:int = uOrder;			bUI.init(fullpath, uW,uH,frameStart);			bUI.name =  uinode.@type;			bUI.id = uinode.@uid			bUI.order = uOrder;			bUI.trans = uTrans;			bUI.x =  xHolder; //(CONTENT_WIDTH / 2 ) - (bUI.iWidth /2 );			bUI.y = yHolder;// (CONTENT_HEIGHT / 2 ) - (bUI.iHeight /2 );						var animXML:XMLList = uinode.*;					//	_slideContent.addChild(bUI as BodyUI);			//animInXML = child.*;						//var animTL:TimelineMax = new TimelineMax({paused:false});			//	trace('inXML=========================== '+ inXML.toString());			var tweenList:Array = new Array();			var hasFrameTween:Boolean = false;			var frameEnd:String;			var animTL:TimelineMax = new TimelineMax({paused:false});			for each (var child:XML in animXML) 			{ 								var animType:String = String(child.@type).toLocaleLowerCase();				var tweenType:String = child.@tweenType;				var tweenOrder:String = child.@tweenOrder;				//tweenTime is used to position the tween in a timeline				var tweenTime:Number =  (child.hasOwnProperty("@tweenTime")) ? child.@tweenTime : 0;					//child.@tweenTime;				//tweenDuration is used for duration of tween t				var tweenDuration:Number = (child.hasOwnProperty("@tweenDuration")) ? child.@tweenDuration : 1;					//child.@tweenDuration;				//var frameEnd:String = (child.hasOwnProperty("@frameEnd")) ? child.@frameEnd : 'end';				var tweenEase:String = child.@tweenEase;				//var tweenList:Array = new Array();				var tweenMAX:TweenMax;				//	trace("animType " + animType);								switch (animType) {					case 'slidedown':						animTL.add(TweenMax.from(bUI, tweenDuration, {y:"-100",ease:EaseLookup.find(tweenEase)}), tweenTime);											//	tweenList.push(TweenMax.from(bUI, tweenDuration,{alpha:0,ease:EaseLookup.find(tweenEase)}));						break;					case 'fadeon':					//	tweenList.push(TweenMax.from(bUI, tweenDuration,{alpha:0,ease:EaseLookup.find(tweenEase)}));						animTL.add(TweenMax.from(bUI, tweenDuration,{alpha:0,ease:EaseLookup.find(tweenEase)}), tweenTime);						break;					case 'frametween':					//	trace('frametween=' +frameEnd);						hasFrameTween = true;						frameEnd = (child.hasOwnProperty("@frameEnd")) ? child.@frameEnd : 'end';						animTL.call(_bodyAnimSWF_handler,["frametween",frameEnd,bUI],tweenTime);						//tweenList.push(TweenMax.delayedCall(1,_bodyAnimSWF_handler,[animType,frameEnd,bUI]));						break;										case 'shrink2corner':												var useScaleFactor:Boolean = child.hasOwnProperty("@scale");												var newWidth:int;						var newHeight:int;																		var scaleFactor:Number;						if (useScaleFactor) {							scaleFactor = child.@scale;							//trace('bdyanimswf.width= ' + bdyanimswf.iWidth);														newWidth = int(uW * scaleFactor);							newHeight = int(uH * scaleFactor);													} else {							newWidth = child.@width;							newHeight = child.@height;													}																		var shrinkMargin:Number = (child.hasOwnProperty("@margin")) ? child.@margin : margin;						var shrinkX:String =   (child.hasOwnProperty("@x"))?child.@x:"0";						var shrinkY:String =  (child.hasOwnProperty("@y"))?child.@y:"0";												var newX:Number = (!isNaN(Number(shrinkX)))?Number(shrinkX):SimpleUtils.relativeLayoutConverter(shrinkX,CONTENT_WIDTH,newWidth,shrinkMargin,_layoutModifier);						var newY:Number = (!isNaN(Number(shrinkY)))?Number(shrinkY):SimpleUtils.relativeLayoutConverter(shrinkY,CONTENT_HEIGHT,newHeight,shrinkMargin);						trace('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXnewWidth = ' + newWidth + '  newHEight='+ newHeight+' newX = ' + newX + '  newY='+ newY + "tweenDur="+tweenDuration);									//	tweenList.push(TweenMax.to(bUI, tweenDuration, {transformMatrix:{x:newX, y:newY, scaleX:scaleFactor, scaleY:scaleFactor}}));																	animTL.add(TweenMax.to(bUI, tweenDuration, {transformMatrix:{x:newX, y:newY, scaleX:scaleFactor, scaleY:scaleFactor}}), tweenTime);												//	tweenList.push(TweenMax.to(bUI, tweenDuration,{width:newWidth, height:newHeight,x:newX,y:newY,ease:EaseLookup.find(tweenEase)}));													//	trace("logoIMGwidth" + newWidth + "newX== " + newX);					//	tweenMAX = TweenMax.to(target, tweenDuration,{width:newWidth, height:newHeight,x:newX,y:newY,ease:EaseLookup.find(tweenEase)});						//	tweenMAX = TweenMax.to(target, tweenDuration,{scaleX:0.5,scaleY:0.5,x:newX,y:newY,ease:EaseLookup.find(tweenEase)});						//	tweenList.push(tweenMAX);						break;					case 'move':					//	tweenList.push(TweenMax.to(bUI, tweenDuration,{x:child.@x,y:child.@y,ease:EaseLookup.find(tweenEase)}));						animTL.add(TweenMax.to(bUI, tweenDuration,{x:child.@x,y:child.@y,ease:EaseLookup.find(tweenEase)}), tweenTime);						break;					default:						trace('emply animbuild item');				}				//animTL.add(tweenList,0,"sequence",1);								//animTL.add(tweenList,0);							//	animTL.insert(tweenMAX,tweenTime);			}		//	var animTL:TimelineMax = new TimelineMax({paused:false, tweens:tweenList, align:"start",stagger:1});			//animTL.add(tweenList,0,"sequence",1);		/*	if (hasFrameTween){				trace("bodyAnimSWF_handler,");				animTL.call(_bodyAnimSWF_handler,["frametween",frameEnd,bUI]);			}			*/			bUI.animTL = animTL;						if (forScene){				_sceneItems.push(bUI as BodyUI);				_sceneLayer.addChild(bUI as BodyUI);			} else {			_slideItems.push(bUI as BodyUI);			_slideContent.addChild(bUI as BodyUI);			}			//return bUI;		//bodyTL.tlmax = animTL;//_buildAnimTimeline(bUI,animInXML);					}			/*			var itemXML:XMLList = uinode.*;						for each (var child:XML in itemXML) 			{ 								//	var bodyTL:BodyTimeLine;				//bodyTL.name = child.@type; //"bodyAnim";				var itemID:String = child.@id;				var itemType:String = _stringLC(child.@type);				var itemOrder:Number = child.@order;				var iX:Number;				var iY:Number;								var iW:Number;				var iH:Number;								var iFile:String;								var bodyTargetUI:BodyUI;				var syncType:String = child.@syncType;				var bodyTL:BodyTimeLine  = new BodyTimeLine();				bodyTL.name = itemType;				//	bodyTL.type = itemType;				bodyTL.init(itemID,itemOrder,itemType);				if (itemType == 'bodytimeline') {					//syncTL = new TimelineMax();										var xloc:String;					var yloc:String;										if (child.hasOwnProperty("@xLoc")){						xloc = child.@xLoc;					} else {						iX = child.@x;					}					if (child.hasOwnProperty("@yLoc")){						yloc = child.@yLoc;					} else {						iY = child.@y;					}															iW = child.@width;					iH = child.@height;					iFile = _stringLC(child.@url);										var animInXML:XMLList;;					if (iFile == "mcprocessanim") {						//trace('}}}}}}}}}}}}}}}}}SHIT');					} else  {												var bUI:BodyAnimSWF = new BodyAnimSWF();						var path:String = child.@sfile;						var fullpath:String = _shell_dir+path;						var ordernum:int = int(child.@order);						var bw:Number = child.@width;						var bh:Number = child.@height;												var startflbl:String = child.@frameStart;						bUI.init(child.@id,ordernum,child.@time,fullpath, bw,bh,startflbl);						bUI.name = child.@id;												//	bUI.trans = iTrans;						//bUI.ease = iEase;												bUI.x =  (CONTENT_WIDTH / 2 ) - (bUI.iWidth /2 );						bUI.y = (CONTENT_HEIGHT / 2 ) - (bUI.iHeight /2 );												_slideContent.addChild(bUI as BodyUI);						animInXML = child.*;						bodyTL.tlmax = _buildAnimTimeline(bUI,animInXML);					}										//var animInXML:XMLList = child.*;					//	bodyTL.tlmax = _buildAnimTimeline(targetUI,animInXML);										//bodyTL.tlmax = syncTL;										_slideItems.push(bodyTL);									}							}		}		*/		/*		private function _createBodyAnimSWF(uinode:XML):void		{						var iType:String = uinode.@type;			var iTrans:String = uinode.@trans;			var iEase:String = uinode.@ease;									var bodyXML:XMLList = uinode.*;						for each (var child:XML in bodyXML) 			{ 				var bUI:BodyAnimSWF = new BodyAnimSWF();				var path:String = child.@sfile;				var fullpath:String = _shell_dir+path;				var ordernum:int = int(child.@order);				var bw:Number = child.@width;				var bh:Number = child.@height;				bUI.init(child.@id,ordernum,child.@time,fullpath, bw,bh);				bUI.name = child.@id;				bUI.trans = iTrans;				bUI.ease = iEase;				bUI.x =  child.@x;								bUI.y=  child.@y;				//trace("bUI.y = " + bUI.y);												//	var adjY:Number = (bUI.y + bUI.height);				//	startY = adjY;				_slideContent.addChild(bUI);				_slideItems.push(bUI);				//	_slideItems.push({ordernum,bb1});			}		}		*/				/*		private function _createSceneImg(uinode:XML):void		{						var iW:Number =  (uinode.hasOwnProperty("@width")) ? uinode.@width : 200;			var iH:Number = (uinode.hasOwnProperty("@height")) ? uinode.@width : 200;			var iX:Number = (uinode.hasOwnProperty("@x")) ? uinode.@x : 0;			var iY:Number = (uinode.hasOwnProperty("@y")) ? uinode.@y : 0;									var iPadding:Number = (uinode.hasOwnProperty("@padding")) ? uinode.@padding : SHELL_VARS.DEFAULT_PADDING;			var iTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			var iEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			var iEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;			var iTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : SHELL_VARS.DEFAULT_TIME;						//var xHolder:Number = iX;			//var yHolder:Number = iY;						var iType:String = uinode.@type;						var bodyImgXML:XMLList = uinode.*;						for each (var item:XML in bodyImgXML) 			{ 				var bb1:BodyImageAdd = new BodyImageAdd();				var path:String = item.@sfile;				var fullpath:String = _shell_dir+path;				var ordernum:int = int(item.@order);												var scaleIt:Boolean;				var scaleMode:String = (item.hasOwnProperty("@scaleMode")) ? item.@scaleMode : SHELL_VARS.DEFAULT_SCALEMODE;								var scaleFactor:Number = (item.hasOwnProperty("@scaleFactor")) ? item.@scaleFactor : SHELL_VARS.DEFAULT_SCALEFACTOR;								if (scaleMode == 'none') {					scaleIt = false;				} else {					scaleIt = true;				}								var bw:Number  = (item.hasOwnProperty("@width"))? item.@width : iW;				var bh:Number = (item.hasOwnProperty("@height"))? item.@height : iH;												bb1.init(fullpath,scaleMode,scaleFactor,bw,bh);				bb1.name = item.@id;								var newTrans:String = (item.hasOwnProperty("@trans"))? item.@trans : iTrans;				var newEase:String  = (item.hasOwnProperty("@ease"))? item.@ease : iEase;				bb1.trans = newTrans;				bb1.ease = newEase;												var xpad:Number = (item.hasOwnProperty("@xPad"))? item.@xPad : 0;				var ypad:Number  = (item.hasOwnProperty("@yPad"))? item.@xPad : 0;								var xpadding:Number = iPadding + xpad;				var ypadding:Number = iPadding + ypad;								var xloc:String;				var yloc:String;				var setX:Number;				var setY:Number;								if (item.hasOwnProperty("@xLoc")){					xloc = item.@xLoc;					if (xloc == 'right') {						var adjx:Number = bb1.iwidth + xpadding;						var nx:Number = CONTENT_WIDTH - adjx;						setX = nx;// CONTENT_WIDTH - (bb1.width + INNER_PADDING);					} else 	if (xloc == 'center') {						var halfWidth:Number = CONTENT_WIDTH * .5;						var halfImage:Number = bb1.iwidth * .5;						setX  = int(halfWidth) - int(halfImage);					} else {						setX =  xpadding;					}				} else {					setX = (item.hasOwnProperty("@x")) ? item.@x : iX;				}								if (item.hasOwnProperty("@yLoc")){					yloc = item.@yLoc;										if (yloc == 'bottom') {						setY = CONTENT_HEIGHT - (bb1.height + ypadding);					}  else if (yloc == 'middle'){						setY = int(CONTENT_HEIGHT/2) - int(bb1.height/2);// + ypad);					}else {						setY =  ypadding;					}				} else {					setY =  (item.hasOwnProperty("@y")) ? item.@y : iY;				}				bb1.x =  setX;				bb1.y=  setY;								_sceneLayer.addChild(bb1);				//_slideContent.addChild(bb1);				//_slideItems.push(bb1);							}		}		*/		private function _createBodyImageReplace(uinode:XML,imgtype:String = 'image'):void		{									var uW:Number = uinode.@width;			var uH:Number = uinode.@height;						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number = (uinode.hasOwnProperty("@margin")) ? uinode.@margin : 20;						var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : 1;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			var uStyle:String = (uinode.hasOwnProperty("@style")) ? uinode.@style : "none";			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;						var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode : "width";//SHELL_VARS.DEFAULT_SCALEMODE;			var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor : SHELL_VARS.DEFAULT_SCALEFACTOR;						var uSyncType:String = (uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"add";			var uCenterIt:Boolean = (uinode.hasOwnProperty("@centerIt"))? true :false;			var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;					///////////////////////////////						/*			var _slideItemsForAnim:Array = new Array();						var uW:Number = uinode.@width;			var uH:Number = uinode.@height;			var uX:Number = uinode.@x;			var uY:Number = uinode.@y;			var uXloc:String = (uinode.hasOwnProperty("@xLoc")) ? uinode.@xLoc : "x";			var uYloc:String = (uinode.hasOwnProperty("@yLoc")) ? uinode.@yLoc : "y";						var uPadding:Number = (uinode.hasOwnProperty("@padding")) ? uinode.@padding : SHELL_VARS.DEFAULT_PADDING;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			var uStyle:String = (uinode.hasOwnProperty("@style")) ? uinode.@style : "none";			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;			var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : SHELL_VARS.DEFAULT_TIME;			var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode : SHELL_VARS.DEFAULT_SCALEMODE;			var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor : SHELL_VARS.DEFAULT_SCALEFACTOR;						var uCenterIt:Boolean = (uinode.hasOwnProperty("@centerIt"))? true :false;			//var fontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle : SHELL_VARS.DEFAULT_FONTSTYLE;			//	var fontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : SHELL_VARS.DEFAULT_FONTALIGN;						var xHolder:Number = uX;			var yHolder:Number = uY;						var _anim:String = (uinode.hasOwnProperty("@anim"))?uinode.@anim:"add";						var uiTL:TimelineMax = new TimelineMax();;						if (_anim =="sequence"){							}						*/			var itemXML:XMLList = uinode.*;			for each (var item:XML in itemXML) 			{ 				var iid:String = item.@id;				var iorder:int = item.@order;				var itime:Number =  (item.hasOwnProperty("@time")) ? item.@time : uTime;								var iw:Number = (item.hasOwnProperty("@width")) ? item.@width : uW;				var ih:Number = (item.hasOwnProperty("@height")) ? item.@height : uH;								var ix:Number = (item.hasOwnProperty("@x")) ? item.@x : xHolder;				var iy:Number = (item.hasOwnProperty("@y")) ? item.@y : yHolder;								//var synctype:String =(item.hasOwnProperty("@syncType")) ? item.@syncType : "replace";								var time:Number =  (item.hasOwnProperty("@time")) ? item.@time : 1;				//var tIN:Number = (item.hasOwnProperty("@timeIn")) ? item.@timeIn : 0;				//var tOUT:Number = (item.hasOwnProperty("@timeOut")) ? item.@timeOut : 999;								//var iFstyle:String = (item.hasOwnProperty("@fontStyle")) ? item.@fontStyle : fontstyle;				//var itext:String = item;												var itrans:String = (item.hasOwnProperty("@trans")) ? item.@trans :uTrans;				var iease:String = (item.hasOwnProperty("@ease")) ? item.@ease : uEase;				var ieffect:String = (item.hasOwnProperty("@effect")) ? item.@effect :uEffect;				var istyle:String = (item.hasOwnProperty("@style")) ? item.@style :uStyle;				var itempath:String = item.@url;				var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + itempath;				var icenter:Boolean = (item.hasOwnProperty("@centerIt")) ? true :uCenterIt;								var centerImg:Boolean = false;				var img:BodyImageReplace = new BodyImageReplace();				img.init(fullpath,uScaleMode,uScaleFactor,iw,ih,istyle,ieffect,icenter);				img.type = "imagereplace";				//var img:ASBodyImage = new ASBodyImage();				//img.init(fullpath,uScaleMode,uScaleFactor,iw,ih,ieffect);				img.trans = itrans.toLowerCase();				img.ease = iease;				img.syncType = uSyncType;								//img.timeIn = tIN;				//img.timeOut = tOUT;				img.time = itime;								var newX:Number;				var newY:Number;						img.x =ix;;				img.y = iy;				_slideItems.push(img);				_slideContent.addChildAt(img,0);							//	_slideContent.addChildAt(img,0);				/*				var minitl:TimelineLite = new TimelineLite();				minitl.append(TweenLite.from(img,1,{alpha:0,ease:CustomEaseHelper.find(img.ease)}));				if(synctype != "stay"){					minitl.insert(TweenLite.to(img,1,{alpha:0,ease:CustomEaseHelper.find(img.ease)}),itime);				}								uiTL.append(minitl);				*/				//_slideItemsForAnim.push(minitl);							}						//	var tlmax:TimelineMax = new TimelineMax();			//tlmax.appendMultiple(_slideItemsForAnim);		//	var bdytl:BodyTimeLine =new BodyTimeLine(); 			//trace('000000IMAGE totalDuration=' + uiTL.totalDuration);		//	bdytl.tlmax = uiTL;		//	bdytl.type = "bodytimeline";		//	_slideItems.push(bdytl);								}		/*		private function _createBodyText(uinode:XML, isLabelText:Boolean = false):void		{						var _slideItemsForAnim:Array = new Array();			var uW:Number =  uinode.@width;			var uH:Number =  uinode.@height;// : _timelineParams.uiHeight;			var uXLoc:String = (uinode.hasOwnProperty("@xLoc"))?uinode.@xLoc : "x";			var uYLoc:String = (uinode.hasOwnProperty("@yLoc"))?uinode.@xLoc : "y";						var uX:Number =  (uinode.hasOwnProperty("@x"))?uinode.@x : 0;			var uY:Number =  (uinode.hasOwnProperty("@y"))?uinode.@y : 0;						var uPadding:Number = (uinode.hasOwnProperty("@padding")) ? uinode.@padding :0;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans :  SHELL_VARS.DEFAULT_TRANS;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease :  SHELL_VARS.DEFAULT_EASE;			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect :  SHELL_VARS.DEFAULT_EFFECT;			var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time :  1;			var ufontsize:Number = (uinode.hasOwnProperty("@fontSize")) ? uinode.@fontSize : SHELL_VARS.DEFAULT_FONTSIZE;			var ufontcolor:String = (uinode.hasOwnProperty("@fontColor")) ? uinode.@fontColor :  SHELL_VARS.DEFAULT_FONTCOLOR;			var ufontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle : SHELL_VARS.DEFAULT_FONTSTYLE;			var ufontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign :SHELL_VARS.DEFAULT_FONTALIGN;						var uSyncType:String = (uinode.hasOwnProperty("@syncType")) ? uinode.@syncType :"add";						var xHolder:Number = uX;			var yHolder:Number = uY;						var bulletXML:XMLList = uinode.*;						for each (var bodyBullet:XML in bulletXML) 			{ 				var bid:String = bodyBullet.@id;				var ord:int = bodyBullet.@order;				var btime:Number =  (bodyBullet.hasOwnProperty("@time")) ? bodyBullet.@time : uTime;								var bw:Number = (bodyBullet.hasOwnProperty("@width")) ? bodyBullet.@width : uW;				var bh:Number = (bodyBullet.hasOwnProperty("@height")) ? bodyBullet.@height : uH;				var ixLoc:String = (bodyBullet.hasOwnProperty("@xLoc")) ? bodyBullet.@xLoc : uXLoc;				var iyLoc:String = (bodyBullet.hasOwnProperty("@yLoc")) ? bodyBullet.@yLoc : uYLoc;								var bx:Number = (bodyBullet.hasOwnProperty("@x")) ? bodyBullet.@x : uX;				var by:Number = (bodyBullet.hasOwnProperty("@y")) ? bodyBullet.@y : uY;								var synctype:String =(bodyBullet.hasOwnProperty("@syncType")) ? bodyBullet.@syncType : uSyncType;								//var tIN:Number = (bodyBullet.hasOwnProperty("@timeIn")) ? bodyBullet.@timeIn : 0;				//var tOUT:Number = (bodyBullet.hasOwnProperty("@timeOut")) ? bodyBullet.@timeOut : 999;								var fsize:Number = (bodyBullet.hasOwnProperty("@fontSize")) ? bodyBullet.@fontSize :ufontsize;				var fcolor:String = (bodyBullet.hasOwnProperty("@fontColor")) ? bodyBullet.@fontColor : ufontcolor;				var falign:String = (bodyBullet.hasOwnProperty("@fontAlign")) ? bodyBullet.@fontAlign :ufontalign;				var fstyle:String = (bodyBullet.hasOwnProperty("@fontStyle")) ? bodyBullet.@fontStyle : ufontstyle;																var bullettxt:String;				if (isLabelText){					bullettxt = bodyBullet.label;				} else {					bullettxt = bodyBullet;				}				var xpad:Number = (bodyBullet.hasOwnProperty("@xPad"))?bodyBullet.@xPad:0;				var ypad:Number = (bodyBullet.hasOwnProperty("@yPad"))?bodyBullet.@yPad:0;								var btrans:String = (bodyBullet.hasOwnProperty("@trans")) ? bodyBullet.@trans : uTrans;				var bease:String = (bodyBullet.hasOwnProperty("@ease")) ? bodyBullet.@ease : uEase;								//var bullettxt:String = bodyBullet;								var asb:BodyTextReplace = new BodyTextReplace();				asb.init(bullettxt,bw,fstyle,fsize,fcolor,falign,fstyle,uPadding);				asb.id = bid;				asb.order =ord;				asb.time = btime;				asb.trans = btrans;				asb.ease = bease;				asb.syncType = synctype;				asb.type = "textreplace";				//	asb.timeIn = tIN;				//asb.timeOut = tOUT;				//	asb.time = iTime;								var newX:Number;				var newY:Number;								switch (ixLoc) {					case 'center':						newX = int(CONTENT_WIDTH*.5 ) -  int(bw*.5);						break;					case 'right':						newX = (CONTENT_WIDTH) -  (asb.width + uPadding + xpad);						break;					case 'left':						newX = uPadding + xpad;						break;					default:						//if xloc = 'x'						newX = bx;				}								if (synctype == 'buildy') {					newY = yHolder;					yHolder = yHolder + (asb.height + uPadding + ypad);					//	trace('yHolder = ' + yHolder);				} else {					newY = by;					yHolder = newY + (asb.height + uPadding + ypad);				}								asb.x = newX;				asb.y = newY; 				_slideContent.addChild(asb);												if (_currentSlideObject.slideAnimType == "insert"){					_slideItemsForAnim.push(asb);				} else {					_slideItems.push(asb);				}											}			if (_currentSlideObject.slideAnimType == "insert"){				var bdytl:BodyTimeLine = _buildInnerSyncTL(_slideItemsForAnim);				bdytl.type = "bodytimeline";				_slideItems.push(bdytl);			}		}*/				private function _createBodyImageAdd(uinode:XML,anmtype:String = 'add'):void		{						var animtype:String = anmtype;			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;			var uX:Number = uinode.@x;			var uY:Number = uinode.@y;			var uXloc:String = (uinode.hasOwnProperty("@xLoc")) ? uinode.@xLoc : "x";			var uYloc:String = (uinode.hasOwnProperty("@yLoc")) ? uinode.@yLoc : "y";						var uPadding:Number = (uinode.hasOwnProperty("@padding")) ? uinode.@padding : SHELL_VARS.DEFAULT_PADDING;			var uTrans:String = (uinode.hasOwnProperty("@trans")) ? uinode.@trans : SHELL_VARS.DEFAULT_TRANS;			var uEase:String = (uinode.hasOwnProperty("@ease")) ? uinode.@ease : SHELL_VARS.DEFAULT_EASE;			var uStyle:String = (uinode.hasOwnProperty("@style")) ? uinode.@style : "none";			var uEffect:String = (uinode.hasOwnProperty("@effect")) ? uinode.@effect : SHELL_VARS.DEFAULT_EFFECT;			var uTime:Number = (uinode.hasOwnProperty("@time")) ? uinode.@time : SHELL_VARS.DEFAULT_TIME;			var uScaleMode:String = (uinode.hasOwnProperty("@scaleMode")) ? uinode.@scaleMode : SHELL_VARS.DEFAULT_SCALEMODE;			var uScaleFactor:Number = (uinode.hasOwnProperty("@scaleFactor")) ? uinode.@scaleFactor : SHELL_VARS.DEFAULT_SCALEFACTOR;						var uCenterIt:Boolean = (uinode.hasOwnProperty("@centerIt"))? true :false;			//var fontstyle:String = (uinode.hasOwnProperty("@fontStyle")) ? uinode.@fontStyle : SHELL_VARS.DEFAULT_FONTSTYLE;			//	var fontalign:String = (uinode.hasOwnProperty("@fontAlign")) ? uinode.@fontAlign : SHELL_VARS.DEFAULT_FONTALIGN;						var xHolder:Number = uX;			var yHolder:Number = uY;						var itemXML:XMLList = uinode.*;			for each (var item:XML in itemXML) 			{ 				var iid:String = item.@id;				var iorder:int = item.@order;				var itime:Number =  (item.hasOwnProperty("@time")) ? item.@time : uTime;								var iw:Number = (item.hasOwnProperty("@width")) ? item.@width : uW;				var ih:Number = (item.hasOwnProperty("@height")) ? item.@height : uH;								var ix:Number = (item.hasOwnProperty("@x")) ? item.@x : uX;				var iy:Number = (item.hasOwnProperty("@y")) ? item.@y : uY;								var synctype:String =(item.hasOwnProperty("@syncType")) ? item.@syncType : "replace";								//var tIN:Number = (item.hasOwnProperty("@timeIn")) ? item.@timeIn : 0;				//	var tOUT:Number = (item.hasOwnProperty("@timeOut")) ? item.@timeOut : 999;								//var iFstyle:String = (item.hasOwnProperty("@fontStyle")) ? item.@fontStyle : fontstyle;				//var itext:String = item;												var itrans:String = (item.hasOwnProperty("@trans")) ? item.@trans :uTrans;				var iease:String = (item.hasOwnProperty("@ease")) ? item.@ease : uEase;				var istyle:String = (item.hasOwnProperty("@style")) ? item.@style :uStyle;				var ieffect:String = (item.hasOwnProperty("@effect")) ? item.@effect :uEffect;				var itempath:String = item.@url;				var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + itempath;				var icenter:Boolean = (item.hasOwnProperty("@centerIt")) ? true :uCenterIt;				var centerImg:Boolean = false;				var img:BodyImageAdd = new BodyImageAdd();				img.init(fullpath,uScaleMode,uScaleFactor,iw,ih,istyle,ieffect,icenter);				//centerImg = icenter;								//var img:ASBodyImage = new ASBodyImage();				//img.init(fullpath,uScaleMode,uScaleFactor,iw,ih,ieffect);				img.trans = itrans;				img.ease = iease;				img.syncType = synctype;				img.order = iorder;				//img.timeIn = tIN;				//img.timeOut = tOUT;				img.time = itime;								var newX:Number;				var newY:Number;				var xloc:String = (item.hasOwnProperty("@xLoc")) ? item.@xLoc: uXloc;								var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :0;								if (xloc != 'x'){					//'xloc= '+ xloc);					if(xloc == 'center'){						if (centerImg) {							newX = CONTENT_WIDTH /2  - int(iw /2) ;						} else {							newX = CONTENT_WIDTH /2  - int(iw /2) ;						}						//trace('xloc===='+ xloc + 'shelwidthby2 ' + int(SHELL_VARS.CONTENT_WIDTH /2) + 'minus  '+ int(iw /2 ));					} else if (xloc =='right'){						if (centerImg) {							newX = CONTENT_WIDTH - (int(img.iwidth*.5) + uPadding + xpad);  						} else {							newX = CONTENT_WIDTH - (img.iwidth + uPadding + xpad);  						}					} else {						if (centerImg){							newX =	(int(img.iwidth*.5) + uPadding + xpad); 						} else {							newX = (uPadding + xpad);  						}					}				} else {					newX = ix;				}				//	trace('newX============='+newX);				var yloc:String = (item.hasOwnProperty("@yLoc")) ? item.yLoc: uYloc;				var ypad:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad :0;				if(yloc != 'y') {					if(yloc == 'middle'){						if (centerImg) {							newY = int(CONTENT_HEIGHT /2);						} else {							newY = int(CONTENT_HEIGHT /2) - int(img.iheight *.5);						}					} else if (xloc =='bottom'){						if (centerImg) {							newY = CONTENT_HEIGHT - ( int(img.iheight * .5) + (uPadding + ypad));  						} else {							newY = CONTENT_HEIGHT - (img.iheight + (uPadding + ypad)); 						}					} else {						if (centerImg) {							newY = int(img.iheight *.5) + (uPadding + ypad); 						} else {							newY = uPadding + ypad; 						}											}				} else {					newY= iy;				}				img.x =newX;				img.y = newY;												if (synctype == 'overlay'){					img.alpha = 0;					_slideContent.addChild(img);				} else {					_slideContent.addChildAt(img,0);				}				/*				if (animtype == 'over') {				img.alpha = 0;				_slideContent.addChild(img);				}else {								}				*/								_slideItems.push(img);							}					}		// vvvvvvv		private function _createBodyPages(uinode:XML):void		{			var iTrans:String = uinode.@trans;			var iEase:String = uinode.@ease;		///	var iX:Number = uinode.@x;		//	var iY:Number = uinode.@y;			var iOrder:int = uinode.@order;			var iTime:Number = uinode.@time;						var uW:Number =  uinode.@width;			var uH:Number =  uinode.@height;			var bodypages:BodyPages = new BodyPages();			bodypages.buildPages(uinode,FONT_NAME,_languageID);			bodypages.id = 'bodypages';			bodypages.name = 'bodypages';			bodypages.type = 'bodypages';						var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var umargin:Number =  (uinode.hasOwnProperty("@margin"))?uinode.@margin:0;						var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,umargin, _layoutModifier);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,umargin);						bodypages.x = xHolder;			bodypages.y = yHolder;			bodypages.trans = iTrans;			bodypages.ease = iEase;			bodypages.order = iOrder;			bodypages.time = iTime;						_slideContent.addChild(bodypages);			_slideItems.push(bodypages);								}		// vvvvvvv		private function _createBodyImageGlow(uinode:XML):void		{			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;			var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";			var syncType:String = (uinode.hasOwnProperty("@syncType"))?uinode.@syncType:"buildx";			var margin:Number = (uinode.hasOwnProperty("@margin"))?uinode.@margin:20;			var uxpad:Number = (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number = (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;									//var ufontsize:Number= (uinode.hasOwnProperty("@fontSize"))?uinode.@fontSize:16;		//	var ufontcolor:String= (uinode.hasOwnProperty("@fontColor"))?uinode.@fontColor:"white";		//	var uformattype:String = (uinode.hasOwnProperty("@formatType"))?uinode.@formatType:"normal";									var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin,_layoutModifier);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var uip:UIparams = new UIparams();			uip.uiFontSize = (uinode.hasOwnProperty("@fontSize"))?uinode.@fontSize:16;			uip.uiFontColor = (uinode.hasOwnProperty("@fontColor"))?uinode.@fontColor:"white";			uip.uiFontStyle =  (uinode.hasOwnProperty("@formatType"))?uinode.@formatType:"normal";			uip.uiFontHAlign =  (uinode.hasOwnProperty("@fontAlign"))?uinode.@fontAlign:"center";			uip.uiFillAlpha = uinode.@fillAlpha;			uip.uiFillColor = uinode.@fillColor;			uip.uiFrameSize = uinode.@frameSize;			uip.uiFrameAlpha = uinode.@frameAlpha;			uip.uiFrameColor = uinode.@frameColor;			uip.uiFrameShape = uinode.@frameShape;			uip.uiWidth = uW			uip.uiHeight = uH;			uip.uiPulseColor = (uinode.hasOwnProperty("@pulseColor"))?uinode.@pulseColor:PULSE_COLOR;									var uTrans:String = (uinode.hasOwnProperty("@trans"))?uinode.@trans:"none";			var uEase:String = (uinode.hasOwnProperty("@ease"))?uinode.@ease:"none";			var uTime:Number = (uinode.hasOwnProperty("@time"))?uinode.@time:1;									var bodyImgXML:XMLList = uinode.*;						var itemIndex:int = 0;						var bb1:BodyImageGlow;			for each (var item:XML in bodyImgXML) 			{ 				bb1 = new BodyImageGlow();				var itempath:String = item.@url;								var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + itempath;				uip.uiContentPath =  fullpath;				var ordernum:int = int(item.@order);				var tIn:Number = item.@timeIn;				var tOut:Number = item.@itemOut;								var iw:Number = (item.hasOwnProperty("@width"))?item.@width:uW;				var ih:Number = (item.hasOwnProperty("@height"))?item.@height:uH;								var itime:Number = (item.hasOwnProperty("@time"))?item.@time:uTime;				var itrans:String = (item.hasOwnProperty("@trans"))?item.@trans:uTrans;				var iease:String = (item.hasOwnProperty("@ease"))?item.@ease:uEase;				var boxlabel:String;// = item;				if (item.label != undefined) {					boxlabel= item.label;				} else {					boxlabel = item;				}								bb1.init(fullpath,uip,boxlabel,FONT_NAME,_languageID);				bb1.id = item.@id;				bb1.name = item.@id;				bb1.order = ordernum;				bb1.time = itime;				bb1.timeIn = tIn;				bb1.timeOut = tOut;				bb1.trans = itrans;				bb1.ease = iease;				if (item.triggers != undefined) {					bb1.triggers = item.triggers;//.trig;				} else {					//	trace("no triggers undefined");				}								bb1.layoutModifier = _layoutModifier;				var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :uxpad;				var ypad:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad :uypad;				var newX:Number;				var newY:Number;								if (syncType == 'buildy'){					newX = xHolder;					newY = yHolder + ypad;					yHolder = newY + ih;				} else if (syncType == 'buildx'){					if (_layoutModifier == 'flipx'){						newX = xHolder - xpad;						newY = yHolder;						xHolder = newX - (iw);// + xpad);					} else {					newX = xHolder + xpad;					newY = yHolder ;					xHolder = newX + iw;//  + xpad;					}				} else {					var ix:String = (item.hasOwnProperty("@x")) ? item.@x : groupX;					var iy:String = (item.hasOwnProperty("@y")) ? item.@y : groupY;					newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,iw,margin, _layoutModifier);					newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,ih,margin);				}								trace('imageGlow= newX='+ newX + ' newY= '+ newY);								bb1.x = newX;				bb1.y = newY;								_slideContent.addChild(bb1);				_slideItems.push(bb1);							}		}		// Creates the on screen Table row by Row		private function _createBodyTable(uinode:XML):void		{						var uW:Number = uinode.@width;			var uH:Number = uinode.@height;			var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number = (uinode.hasOwnProperty("@margin"))?uinode.@margin:10;						var iTrans:String = uinode.@trans;			var iEase:String = uinode.@ease;						var xStart:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin,_layoutModifier);			var yStart:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var syncType:String = (uinode.hasOwnProperty("@syncType"))?uinode.@syncType:"buildy";						var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:margin;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:10;									var bulletXML:XMLList = uinode.*;						var headRow:BodyTableRow;						var hasHeadRow:Boolean = false;						var tableHeight:Number = 0;						var ifontSize:Number = (uinode.hasOwnProperty("@fontSize")) ? uinode.@fontSize :16;						var xHolder:Number = xStart;			var yHolder:Number = yStart;			for each (var bb:XML in bulletXML) 			{ 				var bb1:BodyTableRow = new BodyTableRow();				var ordernum:int = int(bb.@order);				var bid:String = bb.@id;				var bname:String = bb.@id;				var btime:Number = bb.@time;				var rtype:String = bb.@type;				var ralign:String = bb.@align;				var fsize:Number = (bb.hasOwnProperty("@fontSize")) ? bb.@fontSize :ifontSize;				bb1.init(bid,ordernum,btime,uW,bb,rtype,ralign,fsize,FONT_NAME,_languageID);				bb1.name = bname;				bb1.trans = iTrans;				bb1.ease = iEase;				bb1.x = xHolder;				var iypad:Number= (bb.hasOwnProperty("@yPad"))?bb.@yPad:uypad;				bb1.y= yHolder + iypad; //bodyBullet.@y;				if (bb1.rowType == 'head') {					hasHeadRow = true					headRow = bb1;				}				tableHeight += bb1.rowHeight + iypad;				_slideContent.addChild(bb1);				yHolder = bb1.y + bb1.rowHeight;				_slideItems.push(bb1);				//_slideItems.push({ordernum,bb1});			}			headRow.graphics.lineStyle(3,0x000000,1,true,LineScaleMode.NONE,CapsStyle.NONE);			//headRow.graphics.lineStyle(4,0x000000,2,true,LineScaleMode.NONE,CapsStyle.NONE);			var hrCenterX:int = int(headRow.width /2);			headRow.graphics.moveTo(hrCenterX,-1);			headRow.graphics.lineTo(hrCenterX,tableHeight);					}				private function _createBodySndfx(uinode:XML):void		{						var iTrans:String = uinode.@trans;			var iEase:String = uinode.@ease;									var itemXML:XMLList = uinode.*;						for each (var item:XML in itemXML) 			{ 				var sndfx:BodySndFX= new BodySndFX();				var ordernum:int = int(item.@order);				var itempath:String = item.@url;								var fullpath:String = _shell_dir + SHELL_VARS.FOLDER_MEDIA + itempath;				var audiorepeat:int = (item.hasOwnProperty("@repeat")) ? item.@repeat : 0;								sndfx.init(item.@id,ordernum,item.@time,fullpath,audiorepeat);				sndfx.name = item.@id;				sndfx.trans = iTrans;				sndfx.ease = iEase;												_slideItems.push(sndfx);				//_slideItems.push({ordernum,bb1});			}		}				/*		private function _createBodyCopy(uinode:XML):void		{									var iW:Number = uinode.@width;			var iX:Number = uinode.@x;			var iY:Number = uinode.@y;						var iPadding:Number = uinode.@padding;						var iTrans:String = uinode.@trans;			var iEase:String = uinode.@ease;						var yHolder:Number = iY;			var copyXML:XMLList = uinode.*;						for each (var bodyCopy:XML in copyXML) 			{ 				var bc:BodyCopy = new BodyCopy();				var ordernum:int = int(bodyCopy.@order);				bc.init(bodyCopy.@id,ordernum,bodyCopy.@time,bodyCopy);				bc.name = bodyCopy.@id;				bc.trans = iTrans;				bc.ease = iEase;								bc.x =iX;// bodyCopy.@x;				bc.y= yHolder;// bodyCopy.@y;				yHolder = bc.y + bc.height + iPadding;				//var adjY:Number = (bc.y + bc.height) -6;				//	startY = adjY;				_slideContent.addChild(bc);								_slideItems.push(bc);				//_slideItems.push({ordernum,bb1});			}		}		*/		// Create the Body Note Style Box		private function _createBodyNote(uinode:XML):void		{			var uW:Number = uinode.@width;			var uH:Number = uinode.@height;			var groupX:String = (uinode.hasOwnProperty("@x"))?uinode.@x:"0";			var groupY:String = (uinode.hasOwnProperty("@y"))?uinode.@y:"0";						var margin:Number = (uinode.hasOwnProperty("@margin"))?uinode.@margin:0;						var uTime:Number = (uinode.hasOwnProperty("@time"))?uinode.@time:1;			var uTrans:String = (uinode.hasOwnProperty("@trans"))?uinode.@trans:"none";			var uEase:String = (uinode.hasOwnProperty("@ease"))?uinode.@ease:"none";						var ufontsize:Number= (uinode.hasOwnProperty("@fontSize"))?uinode.@fontSize:14;			var ufontcolor:String= (uinode.hasOwnProperty("@fontColor"))?uinode.@fontColor:"default";			var uformattype:String = (uinode.hasOwnProperty("@formatType"))?uinode.@formatType:"normal";						var xHolder:Number = (!isNaN(Number(groupX)))?Number(groupX):SimpleUtils.relativeLayoutConverter(groupX,CONTENT_WIDTH,uW,margin,_layoutModifier);			var yHolder:Number = (!isNaN(Number(groupY)))?Number(groupY):SimpleUtils.relativeLayoutConverter(groupY,CONTENT_HEIGHT,uH,margin);						var syncType:String = (uinode.hasOwnProperty("@syncType"))?uinode.@syncType:"add";						var uxpad:Number= (uinode.hasOwnProperty("@xPad"))?uinode.@xPad:0;			var uypad:Number= (uinode.hasOwnProperty("@yPad"))?uinode.@yPad:0;						var bnXML:XMLList = uinode.*;						for each (var item:XML in bnXML) 			{ 				var bn1:BodyNote = new BodyNote();				var ordernum:int = int(item.@order);				var bwidth:Number = (item.hasOwnProperty("@width"))? item.@width:uW;				bn1.init(item,bwidth,uformattype,ufontsize,ufontcolor,FONT_NAME,_languageID);				bn1.id = item.@id;				bn1.order = ordernum;				bn1.time = (item.hasOwnProperty("@time"))?item.@time:uTime;				bn1.name = item.@id;											bn1.timeIn = item.@timeIn;				bn1.timeOut = item.@timeOut;				bn1.layoutModifier = _layoutModifier;								bn1.trans = uTrans;				bn1.ease = uEase;												var xpad:Number = (item.hasOwnProperty("@xPad")) ? item.@xPad :uxpad;				var ypad:Number = (item.hasOwnProperty("@yPad")) ? item.@yPad :uypad;				var newX:Number;				var newY:Number;								var thisBtnHeight:Number = int(bn1.height);//bn1.height;				//var thisBtnHeight:Number = int(bn1.height);//bn1.height;				if (syncType == 'buildy'){					newX = xHolder;					newY = yHolder + ypad;					yHolder = newY + thisBtnHeight;//int(bn1.height);				} else {					var ix:String = (item.hasOwnProperty("@x")) ? item.@x : groupX;					var iy:String = (item.hasOwnProperty("@y")) ? item.@y : groupY;					newX = (!isNaN(Number(ix)))?Number(ix):SimpleUtils.relativeLayoutConverter(ix,CONTENT_WIDTH,bwidth,margin, _layoutModifier);					newY = (!isNaN(Number(iy)))?Number(iy):SimpleUtils.relativeLayoutConverter(iy,CONTENT_HEIGHT,thisBtnHeight,margin);					//newX = (!isNaN(Number(ix)))?Number(ix):_relativeLayoutConverter(ix,iw,uPadding);					//newY = (!isNaN(Number(iy)))?Number(iy):_relativeLayoutConverter(iy,ih,uPadding);				}				bn1.x = newX;				bn1.y = newY;								_slideContent.addChild(bn1);								//_slideItems.push({ordernum,bn1});				_slideItems.push(bn1);			}		}						private function _createSceneHeader(uinode:XML):void		{			//sHeader.y = iY; //sceneHeader.@y;			var tl:TimelineMax = new TimelineMax();						var _sceneHeaderXML:XMLList = _templateXML.sceneHeader;			var uH:Number = _sceneHeaderXML.@height;			var uW:Number =_sceneHeaderXML.@width;			//var uX:Number = _sceneHeaderXML.@x;			//var uY:Number = _sceneHeaderXML.@y;						var iPadding:Number = 0;//uinode.@padding;						var fontname:String= _sceneHeaderXML.@fontName;			var ufontsize:Number= _sceneHeaderXML.@fontSize;			var fontcolor:String= _sceneHeaderXML.@fontColor;			var uxpad:Number=_sceneHeaderXML.@xPad;			var uypad:Number= _sceneHeaderXML.@yPad;//:12;									var fillcolor:String= _sceneHeaderXML.@fillColor;			var fillalpha:Number= _sceneHeaderXML.@fillAlpha;						var iTrans:String = (uinode.hasOwnProperty("@trans"))?uinode.@trans:SHELL_VARS.DEFAULT_TRANS;			var iEase:String = (uinode.hasOwnProperty("@ease"))?uinode.@ease: SHELL_VARS.DEFAULT_EASE;						var itemXML:XMLList = uinode.*;						for each (var item:XML in itemXML) 			{ 				var txtwidth:Number= (item.hasOwnProperty("@width"))?item.@width:uW;				var txtheight:Number= (item.hasOwnProperty("@height"))?item.@height:uH;				var xpad:Number= (item.hasOwnProperty("@xPad"))?item.@xPad:uxpad;				var ypad:Number= (item.hasOwnProperty("@yPad"))?item.@yPad:uypad;				//	var iX:Number = (item.hasOwnProperty("@x"))?item.@x:uX;				//	var iY:Number = (item.hasOwnProperty("@y"))?item.@y:uY;				var fontsize:Number= (item.hasOwnProperty("@fontSize"))?item.@fontSize:ufontsize;				var sHeader:BodyHeader = new BodyHeader();				var headtext:String = item;				var ordernum:int = int(item.@order);				//	sHeader.addHeader(headtext,false,0xffffff,iW);				sHeader.addHeader(headtext,fontname,fontsize,fontcolor,xpad,ypad,fillcolor,fillalpha,txtwidth,txtheight,_languageID);				//	sHeader.addHeader(headtext,false,SHELL_COLORS.CLR_WHITE,iW,iH);				sHeader.id = item.@id;				sHeader.name = item.@id;				sHeader.order = ordernum;				sHeader.time =  item.@time;				sHeader.timeIn =  item.@timeIn;				sHeader.timeOut =  item.@timeOut;								sHeader.trans = iTrans;				sHeader.ease = iEase;												//sHeader.x = iX;// sceneHeader.@x;								if (_mainSceneHeader.numChildren > 0){					var dobject:Object = _mainSceneHeader.getChildAt(0);					tl.add(TweenMax.to(dobject,.5,{autoAlpha:0,onComplete:_mainSceneHeaderClear,onCompleteParams:["clear",dobject]}));				}				_mainSceneHeader.addChild(sHeader);				tl.add(TweenMax.from(sHeader,.5,{autoAlpha:0}));							//_slideItems.push(sHeader);				//	_slideItems.push({ordernum, sHeader});			}		tl.play();										}		private function _mainSceneHeaderClear(param1:String,param2:Object):void		{			_mainSceneHeader.removeChild(param2 as DisplayObject);					}								/**		 * ADD STYLE TO UI ELMENETS BASED ON TEMPLATE		 */				private function _addStyle(bui:BodyUI,iwidth:Number,iheight:Number):BodyUI		{			trace('_templateCODE '+_templateCODE);			switch (_templateCODE){								case 'ASCE':					var blackframe:Sprite = new Sprite();					blackframe.graphics.lineStyle(1,0x000000,1,true,LineScaleMode.NONE, CapsStyle.SQUARE,JointStyle.MITER);					blackframe.graphics.drawRect(0,0,iwidth, iheight);					bui.addChild(blackframe);					trace('ASCE');					break;			}			return bui;								}								private function _playPages(params1:String, params2:BodyUI):void		{			_slideTL.pause();			var bps:BodyPages = params2 as BodyPages;			bps.addEventListener(PageEvent.PAGES_COMPLETE,_pagesComplete);			if (params1 == 'playpages') {								//bps.addEventListener(BodyPages.PAGES_COMPLETE, _restartTL);				bps.startPages();			} else {			//	trace('params1= ' + params1);			}		}		private function _pagesComplete(pevt:PageEvent):void		{			trace('scene _pagesComplete');			_slideTL_handler();		}				private function _playSndFX(params1:String, params2:BodyUI):void		{			var sndfx:BodySndFX = params2 as BodySndFX;			if (params1 == 'playsnd') {				sndfx.addEventListener(Event.SOUND_COMPLETE, _resumeTL);				sndfx.playSndfx();				_slideTL.pause();			}		}		private function _resumeTL(evt:Event):void		{			_slideTL.resume();		}		private function _restartTL(evt:Event):void		{			_slideTL.play();		}		private function _bodyAnimSWF_handler(tweentype:String,tweentrigger:String,targetobject:Object):void		{					//	trace('tweentype==='+ tweentype);			var bdyanimswf:BodyAnimSWF= targetobject as BodyAnimSWF;						switch (tweentype){				case 'frametween':					var flbl:String = tweentrigger;				//	trace('tweentrigger==='+ tweentrigger);					bdyanimswf.gotoframelabel = flbl;									break;							}					}		private function _sync_Handler(params1:String,params2:String,params3:Object):void		{		//	trace('target=>' + params1 + " targetTrigger=> " + params2 + " targetParams= " + params3);			var bodyui:BodyUI;			for (var j:int = 0; j < _slideContent.numChildren; j++){				bodyui = _slideContent.getChildAt(j) as BodyUI;				//trace('bodyui.id=>>>>>>>>>>>>>>>>>>> ' + bodyui.id + "bodyui.type= " +bodyui.type);				if (bodyui.id == params1){					switch (bodyui.type){						case 'bodyimageglow':							var glowItem:BodyImageGlow = bodyui as BodyImageGlow;							glowItem.fullGlow(params3 as Number);							break;						case 'bodymcprocess':							//var bmcproc:BodyMCProcess =  BodyMCProcess(bodyui);						//	bmcproc.frameLabel = params2;							break;						case 'bodyanimswf':						//	trace('params2='+params2);							var bdyanimswf:BodyAnimSWF =  bodyui as BodyAnimSWF;							bdyanimswf.gotoframelabel = params2;							//bdyanimswf.gotoAndPlay(params2);							break;											}									}			}				}				///PageEvent		private function _slideEventListener(e:ShellEvent):void		{			var eventAction:String = e.eventAction;			var eventInfo:String = e.eventInfo;		//	trace('_slideEventListener= eventAction= '+ eventAction + 'eventInfo =' + eventInfo);			switch (eventAction){				case 'loadSlide':					var csi:int = _getSlideIndexByName(eventInfo);					_clearAndLoadNextSlide(csi);					break;				case 'slideDone':					_showGPSNote(eventInfo);					break;							}					}						private function _getSlideIndexByName(str:String):int		{			var csi:int;			for (var j:int = 0; j < _slidesArray.length; j++){				var sld:SlideObject = _slidesArray[j];				if (sld.slideNumber == str){					csi = j;					break;				}			}						return csi;		}						private function _showGPSNote(whichGPSnote:String = "notDone"):void		{		//	trace("WhichGPSNote = "+ whichGPSnote);						if (!_allSlidesViewed) {				if (whichGPSnote == "allDone"){					if (_hasScene_EndNote) {						_holder_EndNoteBox =  _holder_EndNote_scene;						_xtraHolder.addChild(_holder_EndNoteBox);					} else {						if (_hasSlide_EndNote) {							_holder_EndNoteBox = _holder_EndNote_slide;							_xtraHolder.addChild(_holder_EndNoteBox);						}					}					//_slide_EndNoteBox.visible = false;				//	_xtraHolder.addChild(_scene_EndNoteBox);					_allSlidesViewed = true;					_sceneDone();				} else {					if (_hasSlide_EndNote) {						_holder_EndNoteBox = _holder_EndNote_slide;						_xtraHolder.addChild(_holder_EndNoteBox);					}				//	_xtraHolder.addChild(_slide_EndNoteBox);				}			} else {							}								}		/**		 * 		 * ShellEvent.SCENE_EVENT 		 * ShellEvent.SLIDE_EVENTS		 * 		 * 		 * **/				private function _slideReady(hasSlideAnim:Boolean = true):void		{			//trace("From SceneBase - _slideReady says the following currentslideid is ready :" + _currentSlideID);			if (hasSlideAnim) {		//		trace('_slideReady------ ');				_slidePlayer.startSlideController();				//_slideTL.play();			//	_slidePlayer.checkStatus();			}		//	trace("From SceneBase - _slideReady says the following currentslideid is ready :" + _currentSlideID);			var se:ShellEvent = new ShellEvent(ShellEvent.SCENE_EVENT,"slideReady",_currentSlideID);			this.dispatchEvent(se);		}		private function _courseDone():void		{			var scenEv:ShellEvent = new ShellEvent(ShellEvent.SCENE_EVENT, "courseDone", _currentSceneID);			this.dispatchEvent(scenEv);		}						private function _sceneDone():void		{			var scenEv:ShellEvent = new ShellEvent(ShellEvent.SCENE_EVENT, "sceneDone", _currentSceneID);			this.dispatchEvent(scenEv);		}						private function _slideDone():void		{			var scenEv:ShellEvent = new ShellEvent(ShellEvent.SCENE_EVENT, "slideDone", _currentSlideID);			this.dispatchEvent(scenEv);		}				private function _actevent_handler(se:ShellEvent):void		{			var eventAction:String = se.eventAction;			var eventInfo:String = se.eventInfo;						switch (eventAction){				case 'actDone':					_checkForMoreSlides();					break;				case 'printActivity':					_printActivity();					break;							}		}				private function _printActivity():void		{			var scenEv:ShellEvent = new ShellEvent(ShellEvent.SCENE_EVENT, "printScene", _currentSlideID);			this.dispatchEvent(scenEv);		}				private function _arrangeCFimages(param1:String,param2:BodyUI):void		{			_slideContent.addChild(param2);		}				/**		 * Main Slide Timeline has Finsihed		 */		private function _slideTL_handler():void		{					//	trace('_slideTL_handler= '+ _sceneType);			_slidePlayer.checkStatus();			switch (_sceneType) {				case 'c2r':					if (_c2rMenu != null){						_c2rMenu.trackBtn(_currentSlideID);					}					this.trackSlideByID(_currentSlideID);					_checkForMoreSlides();					break;				case 'navbarmenu':					_sNavBar.showNavBar();					break;				case 'splash':					_activateStartButton();					break;								default:					if (!_hasActivity){						_checkForMoreSlides();					}								}								}				private function _activateStartButton():void		{		//	trace('_activateStartButton');						for (var i:int = 0; i<_slideItems.length; i++) {				var bdybtn:BodyUI = _slideItems[i];			//	trace('bdybtn.name=====' + bdybtn.name);				if (bdybtn.name  == "startcourse") {					var startBtn:BodyButton = bdybtn as BodyButton;					if (_isSectionComplete){						startBtn.isEnabled = false;					//	startBtn.pulseON = true;					} else {						startBtn.isEnabled = true;						startBtn.pulseON = true;												startBtn.addEventListener(MouseEvent.CLICK, _btnStart_clickHandler);					}									break;				}			}		}			private function _checkForMoreSlides():void		{			var slideIndexAdjust:int = _slidesArray.length -1;						if (_currentSlideIndex >= slideIndexAdjust){				//no more slides trigger sceneComplete				if (_hasScene_EndNote) {					_holder_EndNoteBox = _holder_EndNote_scene;					_xtraHolder.addChild(_holder_EndNoteBox);				} else {					if (_hasSlide_EndNote) {						_holder_EndNoteBox = _holder_EndNote_slide;						_xtraHolder.addChild(_holder_EndNoteBox);					}				}				_sceneDone();			} else {				if (_hasSlide_EndNote) {					_holder_EndNoteBox = _holder_EndNote_slide;					_xtraHolder.addChild(_holder_EndNoteBox);				}				//more slides left 				_slideDone();			}								}				/**		 * Slide Navigation		 * 		 * 		 */		public function KillSlideController():void		{			//trace('KillSlideController');						if (!_hasSceneMusic){				SoundMixer.stopAll();			}						killCurrentSlideTL();					//	_slidePlayer.killALL();						//_slideController.killALL();		//	_slideNavHolder.removeChild(_slideController);		//	_slideController = null;					}				public function killCurrentSlideTL():void		{						if (_slideHasUIAnimations) {								_slidePlayer.killALL();				this.removeChild(_slidePlayer);				_slideTL.kill();			}		}				private function _removeSlideAddSlide(param1:String,param2:String):void {			//trace("The tween has finished! param1 = " + param1 + " param2= " + param2);			while (_slideContent.numChildren > 0) {				_slideContent.removeChildAt(0);			}			_slideHolder.removeChild(_slideContent);						var newSlideId:String = param2;			var csIndex:int;						for (var i:int = 0; i < _slidesArray.length; i++) {				var so:SlideObject = _slidesArray[i];				if (so.slideID == newSlideId){					csIndex = so.slideIndex;					break;				}			}			_addSlide(csIndex);					}				private function _clearAndLoadInternalSlide(newSlideId:String):void		{						this.KillSlideController();			TweenLite.to(_slideContent,0.2,{autoAlpha:0, onComplete:_removeSlideAddSlide,onCompleteParams:["loadSlide",newSlideId]});						//var slideTransTL:TimelineLite = new TimelineLite({onComplete:_onSlideOutTween, onCompleteParams:['slideIndex',newSlideIndex]});			//	slideTransTL.append(TweenLite.to(_slideContent,0.5,{alpha:0}));		}		private function _clearAndLoadNewSlide(newSlideIndex:int):void		{						var slideTransTL:TimelineLite = new TimelineLite({onComplete:_onSlideOutTween, onCompleteParams:['slideIndex',newSlideIndex]});			slideTransTL.append(TweenLite.to(_slideContent,0.5,{alpha:0}));		}				private function _clearAndLoadNextSlide(nextSlideIndex:int):void		{						var slideTransTL:TimelineLite = new TimelineLite({onComplete:_onSlideOutTween, onCompleteParams:['slideIndex',nextSlideIndex]});			slideTransTL.append(TweenLite.to(_slideContent,0.5,{alpha:0}));		}				private function _onSlideOutTween(param1:String,param2:int):void {			//trace("The tween has finished! param1 = " + param1 + " param2= " + param2);			while (_slideContent.numChildren > 0) {				_slideContent.removeChildAt(0);			}			if (!_allSlidesViewed) {				while (_xtraHolder.numChildren > 0) {					_xtraHolder.removeChildAt(0);				}			} else {							}			_slideHolder.removeChild(_slideContent);			killCurrentSlideTL();			_currentSlideIndex = param2;									_addSlide(_currentSlideIndex);		}			private function renderArr():void{						for(var i:Number = 0; i < _slideItems.length; i++){							//trace('order= ' +_slideItems[i].order + " name= " + _slideItems[i].name);							}					}		private function customSortAlgo(objA:Object, objB:Object):int {			if (objA.order < objB.order) {				return -1;			} else if (objA.order > objB.order) {				return 1;			} else {				return 0;			}		}				/** 		 * 		 *  Functions that create the SCene Based Controls		 * 		 *  */													private function _btnStart_clickHandler(me:MouseEvent):void		{			_startCourseClicked();		}				private function _startCourseClicked():void		{					var scenEv:ShellEvent = new ShellEvent(ShellEvent.SCENE_EVENT, "startCourse", _currentSceneID);			this.dispatchEvent(scenEv);		}		private function _btnPDF_clickHandler(me:MouseEvent):void		{						var bbtn:BodyButton = me.currentTarget as BodyButton;			var openLink:String = bbtn.clickLink;			var u:URLRequest = new URLRequest(openLink);			try {				navigateToURL(u,"_blank");			} catch (e:Error) {				trace("Error occurred!");			}						}		/*		private function _startCourse_clickHandler(me:MouseEvent):void		{					//	trace("StartCOurse Button Clicked");			_sceneDone();							}				*/		private function _completeANDexit_clickHandler(me:MouseEvent):void		{			_courseDone();			//	trace("StartCOurse Button Clicked");			//_sceneDone();								}				//_buildAnimTimeline		private function _timeline_buildanim(target:BodyUI,inXML:XMLList):TimelineMax		{			var animTL:TimelineMax = new TimelineMax();		//	trace('inXML=========================== '+ inXML.toString());						for each (var child:XML in inXML) 			{ 								var animType:String = child.@type;				var tweenType:String = child.@tweenType;				var tweenOrder:String = child.@tweenOrder;				var tweenTime:Number = child.@tweenTime;				var tweenDuration:Number = child.@tweenDuration;								var tweenEase:String = child.@tweenEase;			//	var tweenList:Array = new Array();				var tweenMAX:TweenMax;			//	trace("animType " + animType);				switch (animType) {					case 'fadeOn':						if (child.hasOwnProperty("@frameStart")) {							var frameTrigger:String = child.@frameStart;						//	trace('frameTrigger');							tweenMAX = TweenMax.from(target, tweenDuration,{alpha:0,ease:EaseLookup.find(tweenEase),onComplete:_triggerFrame,onCompleteParams:[target,frameTrigger]});						} else {						tweenMAX = TweenMax.from(target, tweenDuration,{alpha:0,ease:EaseLookup.find(tweenEase)});						}						//tweenList.push(tweenMAX);						break;					case 'shrink2corner':												var useScaleFactor:Boolean = child.hasOwnProperty("@scale");												var newWidth:int;						var newHeight:int;												var bdyanimswf:BodyAnimSWF = target as BodyAnimSWF;																		if (useScaleFactor) {							var scaleFactor:Number = child.@scale;							//trace('bdyanimswf.width= ' + bdyanimswf.iWidth);														newWidth = int(bdyanimswf.iWidth * scaleFactor);							newHeight = int(bdyanimswf.iHeight * scaleFactor);												} else {							newWidth = child.@width;							newHeight = child.@height;													}																		var newXloc:String = child.@xLoc;						var newYloc:String = child.@yLoc;											var newX:int;						var newY:int;						if (newXloc == "right") {							newX = int(CONTENT_WIDTH - (newWidth + INNER_PADDING)); 						} else {							newX = INNER_PADDING;						}						if (newYloc == "bottom") {							newY = int(CONTENT_HEIGHT - (newHeight + INNER_PADDING)); 						} else {							newY = INNER_PADDING;						}					//	trace("logoIMGwidth" + newWidth + "newX== " + newX);						tweenMAX = TweenMax.to(target, tweenDuration,{width:newWidth, height:newHeight,x:newX,y:newY,ease:EaseLookup.find(tweenEase)});					//	tweenMAX = TweenMax.to(target, tweenDuration,{scaleX:0.5,scaleY:0.5,x:newX,y:newY,ease:EaseLookup.find(tweenEase)});					//	tweenList.push(tweenMAX);						break;					case 'move':						tweenMAX = TweenMax.to(target, tweenDuration,{x:child.@x,y:child.@y,ease:EaseLookup.find(tweenEase)});					//	tweenList.push(tweenMAX);						break;				}				animTL.insert(tweenMAX,tweenTime);			}			return animTL;					}				private function _triggerFrame(param1:Object,param2:String):void		{			var bu:BodyUI = param1 as BodyUI;						//trace("boject.type = " + bu.type);			if (bu.type == 'bodyanimswf'){				var buswf:BodyAnimSWF = param1 as BodyAnimSWF;				buswf.gotoframelabel = param2;			} else {				//var bdya:BodyMCProcess = param1 as BodyMCProcess;			//	bdya.frameLabel = param2;			}				//		mc.gotoAndPlay(param2);					}						private function _buildInnerSyncTL(uiitems:Array):BodyTimeLine		{									var bodyTL:BodyTimeLine = new BodyTimeLine();			var miniTL:TimelineMax = new TimelineMax();						for (var i:int = 0; i < uiitems.length; i++){				var addTween:Boolean = true;				var bodyui:BodyUI = uiitems[i] as BodyUI;				var btype:String = bodyui.type;									var otrans0:String = bodyui.trans;					var otrans:String = otrans0.toLowerCase();										var delaytime:Number = bodyui.time;					switch (btype){						case 'imagereplace':							miniTL.append((bodyui as BodyImageReplace).animateIn(),1);							if (bodyui.syncType != 'stay'){								miniTL.append((bodyui as BodyImageReplace).animateOut(),delaytime);							}													break;						case 'textreplace':						miniTL.append((bodyui as BodyTextReplace).animateIn());						if (bodyui.syncType != 'stay'){							miniTL.append((bodyui as BodyTextReplace).animateOut(),delaytime);						}												break;													}									}									bodyTL.tlmax = miniTL;			return bodyTL;		}								private function _relativeLayoutConverter(position:String, dimension:Number = 0, pad:Number = 0):Number		{			var pos:String = position.toLowerCase();			var value:Number;			switch (pos) {				case 'left':					value = pad;					break;				case 'right':					value = CONTENT_WIDTH - (dimension + pad);					break;				case 'center':					value = (CONTENT_WIDTH * .5) - (dimension * .5);///pad;					break;				case 'top':					value = pad;					break;				case 'middle':					value = (CONTENT_HEIGHT* .5) - (dimension * .5);					break;				case 'bottom':					value = CONTENT_HEIGHT - (dimension + pad);					break;			}						return int(value);		}									public function get currentSlideObject():SlideObject
		{
			return _currentSlideObject;
		}		public function get printView():Boolean
		{
			return _printView;
		}		public function set printView(value:Boolean):void
		{			
			_printView = value;			if (_hasPrintView){				_switchPrintView(value);			}
		}				/**		 * Utility Methods		 */		private function _stringLC(strIN:String):String		{			var strOUT:String = strIN.toLowerCase();			return strOUT;					}				private function _switchPrintView(printOn:Boolean):void		{			for (var i:int = 0; i < _slideContent.numChildren; i++){				var bui:BodyUI = _slideContent.getChildByName(_printuiname) as BodyUI;				var act:*;				if (bui.name == 'textareainput'){					act = bui as ACT_textAreaInput;					act.printView = printOn;				} else if (bui.name == 'dragrate'){					act = bui as ACT_dragRate;					act.printView = printOn;				}							}									}		public function get hasSceneMenu():Boolean
		{
			return _hasSceneMenu;
		}			}}