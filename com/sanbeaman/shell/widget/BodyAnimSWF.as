package com.sanbeaman.shell.widget{	import com.greensock.TimelineMax;	import com.greensock.TweenMax;	import com.greensock.easing.Quint;	import com.greensock.events.LoaderEvent;	import com.greensock.loading.SWFLoader;		import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.display.Sprite;		public class BodyAnimSWF extends BodyUI	{				private var _fullMediaPath:String;		private var _iLoader:SWFLoader;		private var _mediaItem:MovieClip;		 		private var _cframe:int; // current frame		private var _sframeLabel:String; // start frame		private var _gotoframelabel:String; // goto and play frame				private var _iWidth:Number;		private var _iHeight:Number;						private var _animTL:TimelineMax;				private var _innerMC:MovieClip;						public function BodyAnimSWF()		{						super();		}				public function init(mediaPath:String, iwidth:Number, iheight:Number, sframeLabel:String = "start"):void		{			this.type = "bodyanimswf";			this.contentReady = false;			_iWidth = iwidth;			_iHeight = iheight;			_sframeLabel = sframeLabel;			_fullMediaPath =mediaPath;						_loadMedia(_fullMediaPath,iwidth,iheight);					}		private function _loadMedia(mediapath:String,w:Number,h:Number ):void{			_mediaItem = new MovieClip();			_mediaItem.x = 0;			_mediaItem.y = 0;		//	_mediaItem.alpha = 0.7;		//	this.addChild(_mediaItem);			_iLoader = new SWFLoader(mediapath, {name:"bodyswf", width:w,height:h, onComplete:_mediaLoadComplete_handler});			//this.addChild(_iLoader.content);						_iLoader.load();		}		private function _mediaLoadComplete_handler(evt:LoaderEvent):void		{								//	_mediaItem  = _iLoader.getContent("bodyswf") as MovieClip;			//_mediaItem  = evt.target.rawContent;			//trace("_mediaItem.parent.name = " + _mediaItem.parent.name);			_mediaItem  = _iLoader.rawContent as MovieClip;						this.addChild(_mediaItem);			this.width = _iWidth;			this.height = _iHeight;			_innerMC = _mediaItem.getChildAt(0) as MovieClip;			if (_sframeLabel != 'start'){				_innerMC.gotoAndStop(_sframeLabel);			}			this.contentReady = true;			/*			var mc:MovieClip = this.getChildAt(0) as MovieClip;			mc.gotoAndPlay(6);						for(var i:int = 0; i< this.numChildren; i++) {				trace(this.getChildAt(i).name);			}									switch (_sframeLabel) {				case 'start1':					_mediaItem.gotoAndStop(1);					break;				case 'stop1':					_mediaItem.gotoAndStop(1);					break;				default:					_mediaItem.gotoAndPlay(_sframeLabel);			}			*/			//trace("mediaLoaded");		}		public function setStartFrameLabel(frameLBL:String):void		{			var mc:MovieClip = _mediaItem.getChildAt(0) as MovieClip;			if (frameLBL != "" || frameLBL != null){				//TweenMax.to(mc, 1, {frameLabel:_gotoframelabel, ease:Quint.easeOut});				mc.gotoAndStop(frameLBL);			}		}		public function get gotoframelabel():String		{			return _gotoframelabel;		}				public function set gotoframelabel(value:String):void		{			_gotoframelabel = value;		//	_innerMC.gotoAndStop(_sframeLabel);		//	trace('_mediaItemNum' + _mediaItem.numChildren );		//	var mc:MovieClip = _mediaItem.getChildAt(0) as MovieClip;			if (_gotoframelabel != "" || _gotoframelabel != null){				TweenMax.to(_innerMC, 1, {frameLabel:_gotoframelabel, ease:Quint.easeOut});			//mc.gotoAndPlay(_gotoframelabel);			}			//_mediaItem.gotoAndPlay(_gotoframelabel);		}		public function get iWidth():Number
		{
			return _iWidth;
		}		public function get iHeight():Number
		{
			return _iHeight;
		}		public function get animTL():TimelineMax
		{
			return _animTL;
		}		public function set animTL(value:TimelineMax):void
		{			_animTL = new TimelineMax();
			_animTL = value as TimelineMax;			trace("_animTL.totalDuration=" + _animTL.totalDuration());			_animTL = value;
		}			}}