package com.sanbeaman.shell.widget{	import com.greensock.TimelineLite;	import com.greensock.TimelineMax;	import com.greensock.TweenMax;	import com.sanbeaman.shell.data.TriggerData;		import flash.display.Sprite;		public class BodyUI extends Sprite	{		private var _id:String;		private var _order:int;		private var _time:Number;		private var _syncType:String;		private var _timeIn:Number;		private var _timeOut:Number;		private var _type:String;		private var _trans:String;		private var _ease:String;		private var _target:String;		private var _targetTrigger:String;		private var _targetParams:Object;						private var _layoutModifier:String;				private var _triggerData:TriggerData;		private var _hasTrigData:Boolean;// = false;		private var _triggers:XMLList;				private var _glowUp:int = 1;		private var _glowDown:int = 1;		private var _glowDelay:int = .5;		private var _clrCode:uint;		private var _loopAnim:TimelineMax;						private var _layout:String;				private var _animateIN:TimelineLite;		private var _animateOUT:TimelineLite;						private var _contentReady:Boolean;				public function BodyUI()		{			super();			_hasTrigData = false;			_contentReady = true;		}		public function get timeOut():Number		{			return _timeOut;		}		public function set timeOut(value:Number):void		{			_timeOut = value;		}		public function get timeIn():Number		{			return _timeIn;		}		public function set timeIn(value:Number):void		{			_timeIn = value;		}		public function get syncType():String		{			return _syncType;		}		public function set syncType(value:String):void		{			_syncType = value;		}		public function get targetParams():Object		{			return _targetParams;		}		public function set targetParams(value:Object):void		{			_targetParams = value;		}		public function get targetTrigger():String		{			return _targetTrigger;		}		public function set targetTrigger(value:String):void		{			_targetTrigger = value;		}		public function get id():String		{			return _id;		}				public function set id(value:String):void		{			_id = value;		}		public function get order():int		{			return _order;		}				public function set order(value:int):void		{			_order = value;		}				public function get time():Number		{			return _time;		}				public function set time(value:Number):void		{			_time = value;		}		public function get type():String		{			return _type;		}		public function set type(value:String):void		{			_type = value;		}		public function get trans():String		{			return _trans;		}		public function set trans(value:String):void		{			_trans = value.toLowerCase();		}		public function get ease():String		{			return _ease;		}		public function set ease(value:String):void		{			_ease = value;		}		public function get target():String		{			return _target;		}		public function set target(value:String):void		{			_target = value;		}		public function get triggerData():TriggerData		{			return _triggerData;		}		public function set triggerData(value:TriggerData):void		{			_triggerData = value;		}		public function get triggers():XMLList		{			return _triggers;		}		public function set triggers(value:XMLList):void		{			_triggers = value;			_hasTrigData = true;				}		public function get hasTrigData():Boolean		{			return _hasTrigData;		}				public function get animateIN():TimelineLite		{			return _animateIN;		}				public function set animateIN(value:TimelineLite):void		{			_animateIN = value;		}				public function get animateOUT():TimelineLite		{			return _animateOUT;		}				public function set animateOUT(value:TimelineLite):void		{			_animateOUT = value;		}		public function animateStart(atype:String, clr:String, dur:Number,delay:int = 1):TimelineMax		{			var tl:TimelineMax;			_clrCode = SHELL_COLORS.lookUpColor(clr);			_glowDelay =delay;									var totaldur:Number = (_glowUp +_glowDown + _glowDelay);			trace('dur=' +dur);			var reps:Number;									if (atype == 'glow'){								if (dur >= 900) {					reps = -1;					tl = new TimelineMax({onComplete:_loopAnimation});				} else {					reps = Math.floor(dur / totaldur);					trace('repsflor=' + reps);					tl = new TimelineMax({repeat:reps});				}								tl.append(new TweenMax(this,_glowUp,{glowFilter:{color:_clrCode, alpha:.8,blurX:15,blurY:15,quality:3,strength:3}}));				tl.append(new TweenMax(this,_glowDown,{glowFilter:{color:_clrCode, alpha:.8,blurX:5,blurY:5,quality:3,strength:0},delay:_glowDelay}));				//glowTL.append(new TweenMax(this,1,{glowFilter:{color:clrCode, alpha:.8,blurX:5,blurY:5,quality:3,strength:3},ease:Quint.easeOut,delay:dur}));				//glowTL.append(new TweenMax(this,2,{glowFilter:{color:clrCode, alpha:.8,blurX:10,blurY:10,quality:3,strength:0,delay:dur}}));				//TweenMax.to(this, 3, {glowFilter:{color:clrCode, alpha:.8, blurX:10, blurY:10, strength:3, quality:3}, ease:Quint.easeOut});				trace('tl duration=' +tl.totalDuration);			}						return tl;					}				private function _loopAnimation():void		{			_loopAnim = new TimelineMax({repeat:-1});			_loopAnim.append(new TweenMax(this,_glowUp,{glowFilter:{color:_clrCode, alpha:.8,blurX:15,blurY:15,quality:3,strength:3}}));			_loopAnim.append(new TweenMax(this,_glowDown,{glowFilter:{color:_clrCode, alpha:.8,blurX:5,blurY:5,quality:3,strength:0},delay:_glowDelay}));		}		public function get layout():String
		{
			return _layout;
		}		public function set layout(value:String):void
		{
			_layout = value;
		}		public function get contentReady():Boolean
		{
			return _contentReady;
		}		public function set contentReady(value:Boolean):void
		{
			_contentReady = value;
		}		public function get layoutModifier():String
		{
			return _layoutModifier;
		}		public function set layoutModifier(value:String):void
		{
			_layoutModifier = value;
		}			}}